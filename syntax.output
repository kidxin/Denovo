Terminals unused in grammar

   TRUE
   FALSE


Grammar

    0 $accept: program $end

    1 program: class program
    2        | /* empty */

    3 class: CLASS TYPE inherits LC features RC
    4      | error TYPE inherits LC features RC
    5      | CLASS error inherits LC features RC
    6      | CLASS TYPE inherits error features RC
    7      | CLASS TYPE inherits LC features error

    8 inherits: INHERITS TYPE
    9         | /* empty */
   10         | INHERITS error

   11 features: feature features
   12         | /* empty */

   13 feature: varDec SEMI
   14        | funDec

   15 varDec: varDec COMMA ID
   16       | varDec COMMA ID ASSIGN expr
   17       | type ID
   18       | type ID ASSIGN expr
   19       | /* empty */
   20       | varDec COMMA error
   21       | varDec COMMA error ASSIGN expr
   22       | varDec COMMA ID error expr
   23       | varDec COMMA ID ASSIGN error

   24 array: LB RB
   25      | array LB RB

   26 arrayExpr: arrayExpr LB expr RB
   27          | LB expr RB

   28 arrayExprDec: arrayExprDec LB INT RB
   29             | LB INT RB

   30 argDec: argDec COMMA type ID
   31       | type ID
   32       | /* empty */
   33       | error COMMA type ID
   34       | argDec COMMA error ID
   35       | argDec COMMA type error
   36       | error ID
   37       | type error

   38 funDec: type ID LP argDec RP LC stmts RC
   39       | type error LP argDec RP LC stmts RC
   40       | type ID error argDec RP LC stmts RC
   41       | type ID LP error RP LC stmts RC
   42       | type ID LP argDec RP error stmts RC
   43       | type ID LP argDec RP LC error RC

   44 type: TYPE
   45     | TYPE array
   46     | VOID

   47 stmts: stmt stmts
   48      | /* empty */
   49      | stmt error

   50 compSt: LC stmts RC
   51       | LC error RC

   52 stmt: expr SEMI
   53     | RETURN expr SEMI
   54     | BREAK SEMI
   55     | CONTINUE SEMI
   56     | IF LP logexpr RP stmt
   57     | IF LP logexpr RP stmt ELSE stmt
   58     | WHILE LP logexpr RP stmt
   59     | FOR LP forexpr SEMI logexpr SEMI forexpr RP stmt
   60     | varDec SEMI
   61     | compSt
   62     | error SEMI
   63     | expr error
   64     | error expr SEMI
   65     | RETURN error SEMI
   66     | RETURN expr error
   67     | BREAK error
   68     | CONTINUE error
   69     | WHILE error logexpr RP stmt
   70     | WHILE LP error RP stmt
   71     | WHILE LP logexpr error stmt
   72     | FOR error forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI logexpr error forexpr RP stmt
   75     | IF error logexpr RP stmt ELSE stmt
   76     | IF LP error RP stmt ELSE stmt
   77     | IF LP logexpr error stmt ELSE stmt
   78     | IF LP logexpr RP error ELSE stmt
   79     | IF error logexpr RP stmt
   80     | IF LP error RP stmt
   81     | IF LP logexpr error stmt

   82 forexpr: expr
   83        | /* empty */
   84        | error

   85 logexpr: logexpr AND logexpr
   86        | logexpr OR logexpr
   87        | expr NE expr
   88        | expr EQ expr
   89        | expr GE expr
   90        | expr LE expr
   91        | expr GT expr
   92        | expr LT expr
   93        | NOT logexpr
   94        | LP logexpr RP
   95        | error AND logexpr
   96        | error OR logexpr
   97        | error NE expr
   98        | expr error expr
   99        | expr NE error
  100        | error EQ expr
  101        | expr EQ error
  102        | error GE expr
  103        | expr GE error
  104        | error LE expr
  105        | expr LE error
  106        | error GT expr
  107        | expr GT error
  108        | error LT expr
  109        | expr LT error
  110        | error logexpr RP
  111        | LP error RP
  112        | LP logexpr error

  113 expr: expr MINUS expr
  114     | expr PLUS expr
  115     | expr MULT expr
  116     | expr DIV expr
  117     | expr ASSIGN expr
  118     | ID arrayExpr
  119     | expr DOT expr
  120     | LP expr RP
  121     | MINUS expr
  122     | ID LP args RP
  123     | NEW TYPE arrayExprDec
  124     | NEW TYPE
  125     | ID
  126     | STRCONSTANT
  127     | INT
  128     | NUL
  129     | expr MINUS error
  130     | expr PLUS error
  131     | expr MULT error
  132     | expr DIV error
  133     | MINUS error
  134     | ID LP error RP

  135 args: expr COMMA args
  136     | expr
  137     | /* empty */
  138     | error COMMA args
  139     | expr error args
  140     | expr COMMA error


Terminals, with rules where they appear

$end (0) 0
error (256) 4 5 6 7 10 20 21 22 23 33 34 35 36 37 39 40 41 42 43 49
    51 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    84 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 129 130 131 132 133 134 138 139 140
INT (258) 28 29 127
STRCONSTANT (259) 126
TYPE (260) 3 4 6 7 8 44 45 123 124
ID (261) 15 16 17 18 22 23 30 31 33 34 36 38 40 41 42 43 118 122 125
    134
CLASS (262) 3 5 6 7
COMMA (263) 15 16 20 21 22 23 30 33 34 35 135 138 140
BREAK (264) 54 67
CONTINUE (265) 55 68
ELSE (266) 57 75 76 77 78
VOID (267) 46
FOR (268) 59 72 73 74
IF (269) 56 57 75 76 77 78 79 80 81
INHERITS (270) 8 10
NEW (271) 123 124
NUL (272) 128
RETURN (273) 53 65 66
TRUE (274)
WHILE (275) 58 69 70 71
LC (276) 3 4 5 7 38 39 40 41 43 50 51
RC (277) 3 4 5 6 38 39 40 41 42 43 50 51
LB (278) 24 25 26 27 28 29
RB (279) 24 25 26 27 28 29
SEMI (280) 13 52 53 54 55 59 60 62 64 65 72 73 74
LP (281) 38 39 41 42 43 56 57 58 59 70 71 73 74 76 77 78 80 81 94 111
    112 120 122 134
RP (282) 38 39 40 41 42 43 56 57 58 59 69 70 72 73 74 75 76 78 79 80
    94 110 111 120 122 134
DOT (283) 119
PLUS (284) 114 130
DIV (285) 116 132
MINUS (286) 113 121 129 133
MULT (287) 115 131
ASSIGN (288) 16 18 21 23 117
EQ (289) 88 100 101
LT (290) 92 108 109
GT (291) 91 106 107
LE (292) 90 104 105
GE (293) 89 102 103
NE (294) 87 97 99
AND (295) 85 95
OR (296) 86 96
NOT (297) 93
FALSE (298)
LOWER_THAN_ELSE (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0 1
class (47)
    on left: 3 4 5 6 7, on right: 1
inherits (48)
    on left: 8 9 10, on right: 3 4 5 6 7
features (49)
    on left: 11 12, on right: 3 4 5 6 7 11
feature (50)
    on left: 13 14, on right: 11
varDec (51)
    on left: 15 16 17 18 19 20 21 22 23, on right: 13 15 16 20 21 22
    23 60
array (52)
    on left: 24 25, on right: 25 45
arrayExpr (53)
    on left: 26 27, on right: 26 118
arrayExprDec (54)
    on left: 28 29, on right: 28 123
argDec (55)
    on left: 30 31 32 33 34 35 36 37, on right: 30 34 35 38 39 40 42
    43
funDec (56)
    on left: 38 39 40 41 42 43, on right: 14
type (57)
    on left: 44 45 46, on right: 17 18 30 31 33 35 37 38 39 40 41 42
    43
stmts (58)
    on left: 47 48 49, on right: 38 39 40 41 42 47 50
compSt (59)
    on left: 50 51, on right: 61
stmt (60)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77 78 79 80 81, on right: 47 49 56 57 58 59
    69 70 71 72 73 74 75 76 77 78 79 80 81
forexpr (61)
    on left: 82 83 84, on right: 59 72 73 74
logexpr (62)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104 105 106 107 108 109 110 111 112, on right: 56 57 58 59
    69 71 72 74 75 77 78 79 81 85 86 93 94 95 96 110 112
expr (63)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134, on right: 16 18 21 22 26 27 52
    53 63 64 66 82 87 88 89 90 91 92 97 98 99 100 101 102 103 104 105
    106 107 108 109 113 114 115 116 117 119 120 121 129 130 131 132
    135 136 139 140
args (64)
    on left: 135 136 137 138 139 140, on right: 122 135 138 139


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program  go to state 3
    class    go to state 4


state 1

    4 class: error . TYPE inherits LC features RC

    TYPE  shift, and go to state 5


state 2

    3 class: CLASS . TYPE inherits LC features RC
    5      | CLASS . error inherits LC features RC
    6      | CLASS . TYPE inherits error features RC
    7      | CLASS . TYPE inherits LC features error

    error  shift, and go to state 6
    TYPE   shift, and go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: class . program

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program  go to state 9
    class    go to state 4


state 5

    4 class: error TYPE . inherits LC features RC

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 11


state 6

    5 class: CLASS error . inherits LC features RC

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 12


state 7

    3 class: CLASS TYPE . inherits LC features RC
    6      | CLASS TYPE . inherits error features RC
    7      | CLASS TYPE . inherits LC features error

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 13


state 8

    0 $accept: program $end .

    $default  accept


state 9

    1 program: class program .

    $default  reduce using rule 1 (program)


state 10

    8 inherits: INHERITS . TYPE
   10         | INHERITS . error

    error  shift, and go to state 14
    TYPE   shift, and go to state 15


state 11

    4 class: error TYPE inherits . LC features RC

    LC  shift, and go to state 16


state 12

    5 class: CLASS error inherits . LC features RC

    LC  shift, and go to state 17


state 13

    3 class: CLASS TYPE inherits . LC features RC
    6      | CLASS TYPE inherits . error features RC
    7      | CLASS TYPE inherits . LC features error

    error  shift, and go to state 18
    LC     shift, and go to state 19


state 14

   10 inherits: INHERITS error .

    $default  reduce using rule 10 (inherits)


state 15

    8 inherits: INHERITS TYPE .

    $default  reduce using rule 8 (inherits)


state 16

    4 class: error TYPE inherits LC . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 22
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 17

    5 class: CLASS error inherits LC . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 27
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 18

    6 class: CLASS TYPE inherits error . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 28
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 19

    3 class: CLASS TYPE inherits LC . features RC
    7      | CLASS TYPE inherits LC . features error

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    COMMA     reduce using rule 19 (varDec)
    SEMI      reduce using rule 19 (varDec)
    $default  reduce using rule 12 (features)

    features  go to state 29
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 20

   44 type: TYPE .
   45     | TYPE . array

    LB  shift, and go to state 30

    $default  reduce using rule 44 (type)

    array  go to state 31


state 21

   46 type: VOID .

    $default  reduce using rule 46 (type)


state 22

    4 class: error TYPE inherits LC features . RC

    RC  shift, and go to state 32


state 23

   11 features: feature . features

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    COMMA     reduce using rule 19 (varDec)
    SEMI      reduce using rule 19 (varDec)
    $default  reduce using rule 12 (features)

    features  go to state 33
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 24

   13 feature: varDec . SEMI
   15 varDec: varDec . COMMA ID
   16       | varDec . COMMA ID ASSIGN expr
   20       | varDec . COMMA error
   21       | varDec . COMMA error ASSIGN expr
   22       | varDec . COMMA ID error expr
   23       | varDec . COMMA ID ASSIGN error

    COMMA  shift, and go to state 34
    SEMI   shift, and go to state 35


state 25

   14 feature: funDec .

    $default  reduce using rule 14 (feature)


state 26

   17 varDec: type . ID
   18       | type . ID ASSIGN expr
   38 funDec: type . ID LP argDec RP LC stmts RC
   39       | type . error LP argDec RP LC stmts RC
   40       | type . ID error argDec RP LC stmts RC
   41       | type . ID LP error RP LC stmts RC
   42       | type . ID LP argDec RP error stmts RC
   43       | type . ID LP argDec RP LC error RC

    error  shift, and go to state 36
    ID     shift, and go to state 37


state 27

    5 class: CLASS error inherits LC features . RC

    RC  shift, and go to state 38


state 28

    6 class: CLASS TYPE inherits error features . RC

    RC  shift, and go to state 39


state 29

    3 class: CLASS TYPE inherits LC features . RC
    7      | CLASS TYPE inherits LC features . error

    error  shift, and go to state 40
    RC     shift, and go to state 41


state 30

   24 array: LB . RB

    RB  shift, and go to state 42


state 31

   25 array: array . LB RB
   45 type: TYPE array .

    LB  shift, and go to state 43

    $default  reduce using rule 45 (type)


state 32

    4 class: error TYPE inherits LC features RC .

    $default  reduce using rule 4 (class)


state 33

   11 features: feature features .

    $default  reduce using rule 11 (features)


state 34

   15 varDec: varDec COMMA . ID
   16       | varDec COMMA . ID ASSIGN expr
   20       | varDec COMMA . error
   21       | varDec COMMA . error ASSIGN expr
   22       | varDec COMMA . ID error expr
   23       | varDec COMMA . ID ASSIGN error

    error  shift, and go to state 44
    ID     shift, and go to state 45


state 35

   13 feature: varDec SEMI .

    $default  reduce using rule 13 (feature)


state 36

   39 funDec: type error . LP argDec RP LC stmts RC

    LP  shift, and go to state 46


state 37

   17 varDec: type ID .
   18       | type ID . ASSIGN expr
   38 funDec: type ID . LP argDec RP LC stmts RC
   40       | type ID . error argDec RP LC stmts RC
   41       | type ID . LP error RP LC stmts RC
   42       | type ID . LP argDec RP error stmts RC
   43       | type ID . LP argDec RP LC error RC

    error   shift, and go to state 47
    LP      shift, and go to state 48
    ASSIGN  shift, and go to state 49

    COMMA  reduce using rule 17 (varDec)
    SEMI   reduce using rule 17 (varDec)


state 38

    5 class: CLASS error inherits LC features RC .

    $default  reduce using rule 5 (class)


state 39

    6 class: CLASS TYPE inherits error features RC .

    $default  reduce using rule 6 (class)


state 40

    7 class: CLASS TYPE inherits LC features error .

    $default  reduce using rule 7 (class)


state 41

    3 class: CLASS TYPE inherits LC features RC .

    $default  reduce using rule 3 (class)


state 42

   24 array: LB RB .

    $default  reduce using rule 24 (array)


state 43

   25 array: array LB . RB

    RB  shift, and go to state 50


state 44

   20 varDec: varDec COMMA error .
   21       | varDec COMMA error . ASSIGN expr

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 20 (varDec)


state 45

   15 varDec: varDec COMMA ID .
   16       | varDec COMMA ID . ASSIGN expr
   22       | varDec COMMA ID . error expr
   23       | varDec COMMA ID . ASSIGN error

    error   shift, and go to state 52
    ASSIGN  shift, and go to state 53

    COMMA  reduce using rule 15 (varDec)
    SEMI   reduce using rule 15 (varDec)


state 46

   39 funDec: type error LP . argDec RP LC stmts RC

    error  shift, and go to state 54
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 55
    type    go to state 56


state 47

   40 funDec: type ID error . argDec RP LC stmts RC

    error  shift, and go to state 54
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 57
    type    go to state 56


state 48

   38 funDec: type ID LP . argDec RP LC stmts RC
   41       | type ID LP . error RP LC stmts RC
   42       | type ID LP . argDec RP error stmts RC
   43       | type ID LP . argDec RP LC error RC

    error  shift, and go to state 58
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 59
    type    go to state 56


state 49

   18 varDec: type ID ASSIGN . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 67


state 50

   25 array: array LB RB .

    $default  reduce using rule 25 (array)


state 51

   21 varDec: varDec COMMA error ASSIGN . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 68


state 52

   22 varDec: varDec COMMA ID error . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 69


state 53

   16 varDec: varDec COMMA ID ASSIGN . expr
   23       | varDec COMMA ID ASSIGN . error

    error        shift, and go to state 70
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 71


state 54

   33 argDec: error . COMMA type ID
   36       | error . ID

    ID     shift, and go to state 72
    COMMA  shift, and go to state 73


state 55

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   39 funDec: type error LP argDec . RP LC stmts RC

    COMMA  shift, and go to state 74
    RP     shift, and go to state 75


state 56

   31 argDec: type . ID
   37       | type . error

    error  shift, and go to state 76
    ID     shift, and go to state 77


state 57

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   40 funDec: type ID error argDec . RP LC stmts RC

    COMMA  shift, and go to state 74
    RP     shift, and go to state 78


state 58

   33 argDec: error . COMMA type ID
   36       | error . ID
   41 funDec: type ID LP error . RP LC stmts RC

    ID     shift, and go to state 72
    COMMA  shift, and go to state 73
    RP     shift, and go to state 79


state 59

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   38 funDec: type ID LP argDec . RP LC stmts RC
   42       | type ID LP argDec . RP error stmts RC
   43       | type ID LP argDec . RP LC error RC

    COMMA  shift, and go to state 74
    RP     shift, and go to state 80


state 60

  127 expr: INT .

    $default  reduce using rule 127 (expr)


state 61

  126 expr: STRCONSTANT .

    $default  reduce using rule 126 (expr)


state 62

  118 expr: ID . arrayExpr
  122     | ID . LP args RP
  125     | ID .
  134     | ID . LP error RP

    LB  shift, and go to state 81
    LP  shift, and go to state 82

    $default  reduce using rule 125 (expr)

    arrayExpr  go to state 83


state 63

  123 expr: NEW . TYPE arrayExprDec
  124     | NEW . TYPE

    TYPE  shift, and go to state 84


state 64

  128 expr: NUL .

    $default  reduce using rule 128 (expr)


state 65

  120 expr: LP . expr RP

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 85


state 66

  121 expr: MINUS . expr
  133     | MINUS . error

    error        shift, and go to state 86
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 87


state 67

   18 varDec: type ID ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 18 (varDec)


state 68

   21 varDec: varDec COMMA error ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 21 (varDec)


state 69

   22 varDec: varDec COMMA ID error expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 22 (varDec)


state 70

   23 varDec: varDec COMMA ID ASSIGN error .

    $default  reduce using rule 23 (varDec)


state 71

   16 varDec: varDec COMMA ID ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 16 (varDec)


state 72

   36 argDec: error ID .

    $default  reduce using rule 36 (argDec)


state 73

   33 argDec: error COMMA . type ID

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    type  go to state 94


state 74

   30 argDec: argDec COMMA . type ID
   34       | argDec COMMA . error ID
   35       | argDec COMMA . type error

    error  shift, and go to state 95
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    type  go to state 96


state 75

   39 funDec: type error LP argDec RP . LC stmts RC

    LC  shift, and go to state 97


state 76

   37 argDec: type error .

    $default  reduce using rule 37 (argDec)


state 77

   31 argDec: type ID .

    $default  reduce using rule 31 (argDec)


state 78

   40 funDec: type ID error argDec RP . LC stmts RC

    LC  shift, and go to state 98


state 79

   41 funDec: type ID LP error RP . LC stmts RC

    LC  shift, and go to state 99


state 80

   38 funDec: type ID LP argDec RP . LC stmts RC
   42       | type ID LP argDec RP . error stmts RC
   43       | type ID LP argDec RP . LC error RC

    error  shift, and go to state 100
    LC     shift, and go to state 101


state 81

   27 arrayExpr: LB . expr RB

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 102


state 82

  122 expr: ID LP . args RP
  134     | ID LP . error RP

    error        shift, and go to state 103
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 137 (args)

    expr  go to state 104
    args  go to state 105


state 83

   26 arrayExpr: arrayExpr . LB expr RB
  118 expr: ID arrayExpr .

    LB  shift, and go to state 106

    $default  reduce using rule 118 (expr)


state 84

  123 expr: NEW TYPE . arrayExprDec
  124     | NEW TYPE .

    LB  shift, and go to state 107

    $default  reduce using rule 124 (expr)

    arrayExprDec  go to state 108


state 85

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  120     | LP expr . RP
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    RP      shift, and go to state 109
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 86

  133 expr: MINUS error .

    $default  reduce using rule 133 (expr)


state 87

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  121     | MINUS expr .
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT   shift, and go to state 88
    DIV   shift, and go to state 90
    MULT  shift, and go to state 92

    $default  reduce using rule 121 (expr)


state 88

  119 expr: expr DOT . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 110


state 89

  114 expr: expr PLUS . expr
  130     | expr PLUS . error

    error        shift, and go to state 111
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 112


state 90

  116 expr: expr DIV . expr
  132     | expr DIV . error

    error        shift, and go to state 113
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 114


state 91

  113 expr: expr MINUS . expr
  129     | expr MINUS . error

    error        shift, and go to state 115
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 116


state 92

  115 expr: expr MULT . expr
  131     | expr MULT . error

    error        shift, and go to state 117
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 118


state 93

  117 expr: expr ASSIGN . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 119


state 94

   33 argDec: error COMMA type . ID

    ID  shift, and go to state 120


state 95

   34 argDec: argDec COMMA error . ID

    ID  shift, and go to state 121


state 96

   30 argDec: argDec COMMA type . ID
   35       | argDec COMMA type . error

    error  shift, and go to state 122
    ID     shift, and go to state 123


state 97

   39 funDec: type error LP argDec RP LC . stmts RC

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 134
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 98

   40 funDec: type ID error argDec RP LC . stmts RC

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 138
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 99

   41 funDec: type ID LP error RP LC . stmts RC

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 139
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 100

   42 funDec: type ID LP argDec RP error . stmts RC

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 140
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 101

   38 funDec: type ID LP argDec RP LC . stmts RC
   43       | type ID LP argDec RP LC . error RC

    error        shift, and go to state 141
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 142
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 102

   27 arrayExpr: LB expr . RB
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    RB      shift, and go to state 143
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 103

  134 expr: ID LP error . RP
  138 args: error . COMMA args

    COMMA  shift, and go to state 144
    RP     shift, and go to state 145


state 104

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error
  135 args: expr . COMMA args
  136     | expr .
  139     | expr . error args
  140     | expr . COMMA error

    error   shift, and go to state 146
    COMMA   shift, and go to state 147
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    RP  reduce using rule 136 (args)


state 105

  122 expr: ID LP args . RP

    RP  shift, and go to state 148


state 106

   26 arrayExpr: arrayExpr LB . expr RB

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 149


state 107

   29 arrayExprDec: LB . INT RB

    INT  shift, and go to state 150


state 108

   28 arrayExprDec: arrayExprDec . LB INT RB
  123 expr: NEW TYPE arrayExprDec .

    LB  shift, and go to state 151

    $default  reduce using rule 123 (expr)


state 109

  120 expr: LP expr RP .

    $default  reduce using rule 120 (expr)


state 110

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  119     | expr DOT expr .
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    $default  reduce using rule 119 (expr)


state 111

  130 expr: expr PLUS error .

    $default  reduce using rule 130 (expr)


state 112

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  114     | expr PLUS expr .
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT   shift, and go to state 88
    DIV   shift, and go to state 90
    MULT  shift, and go to state 92

    $default  reduce using rule 114 (expr)


state 113

  132 expr: expr DIV error .

    $default  reduce using rule 132 (expr)


state 114

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  116     | expr DIV expr .
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT  shift, and go to state 88

    $default  reduce using rule 116 (expr)


state 115

  129 expr: expr MINUS error .

    $default  reduce using rule 129 (expr)


state 116

  113 expr: expr . MINUS expr
  113     | expr MINUS expr .
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT   shift, and go to state 88
    DIV   shift, and go to state 90
    MULT  shift, and go to state 92

    $default  reduce using rule 113 (expr)


state 117

  131 expr: expr MULT error .

    $default  reduce using rule 131 (expr)


state 118

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  115     | expr MULT expr .
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT  shift, and go to state 88

    $default  reduce using rule 115 (expr)


state 119

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  117     | expr ASSIGN expr .
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 117 (expr)


state 120

   33 argDec: error COMMA type ID .

    $default  reduce using rule 33 (argDec)


state 121

   34 argDec: argDec COMMA error ID .

    $default  reduce using rule 34 (argDec)


state 122

   35 argDec: argDec COMMA type error .

    $default  reduce using rule 35 (argDec)


state 123

   30 argDec: argDec COMMA type ID .

    $default  reduce using rule 30 (argDec)


state 124

   62 stmt: error . SEMI
   64     | error . expr SEMI

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    SEMI         shift, and go to state 152
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 153


state 125

   54 stmt: BREAK . SEMI
   67     | BREAK . error

    error  shift, and go to state 154
    SEMI   shift, and go to state 155


state 126

   55 stmt: CONTINUE . SEMI
   68     | CONTINUE . error

    error  shift, and go to state 156
    SEMI   shift, and go to state 157


state 127

   59 stmt: FOR . LP forexpr SEMI logexpr SEMI forexpr RP stmt
   72     | FOR . error forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR . LP forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR . LP forexpr SEMI logexpr error forexpr RP stmt

    error  shift, and go to state 158
    LP     shift, and go to state 159


state 128

   56 stmt: IF . LP logexpr RP stmt
   57     | IF . LP logexpr RP stmt ELSE stmt
   75     | IF . error logexpr RP stmt ELSE stmt
   76     | IF . LP error RP stmt ELSE stmt
   77     | IF . LP logexpr error stmt ELSE stmt
   78     | IF . LP logexpr RP error ELSE stmt
   79     | IF . error logexpr RP stmt
   80     | IF . LP error RP stmt
   81     | IF . LP logexpr error stmt

    error  shift, and go to state 160
    LP     shift, and go to state 161


state 129

   53 stmt: RETURN . expr SEMI
   65     | RETURN . error SEMI
   66     | RETURN . expr error

    error        shift, and go to state 162
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 163


state 130

   58 stmt: WHILE . LP logexpr RP stmt
   69     | WHILE . error logexpr RP stmt
   70     | WHILE . LP error RP stmt
   71     | WHILE . LP logexpr error stmt

    error  shift, and go to state 164
    LP     shift, and go to state 165


state 131

   50 compSt: LC . stmts RC
   51       | LC . error RC

    error        shift, and go to state 166
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 167
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 132

   15 varDec: varDec . COMMA ID
   16       | varDec . COMMA ID ASSIGN expr
   20       | varDec . COMMA error
   21       | varDec . COMMA error ASSIGN expr
   22       | varDec . COMMA ID error expr
   23       | varDec . COMMA ID ASSIGN error
   60 stmt: varDec . SEMI

    COMMA  shift, and go to state 34
    SEMI   shift, and go to state 168


state 133

   17 varDec: type . ID
   18       | type . ID ASSIGN expr

    ID  shift, and go to state 169


state 134

   39 funDec: type error LP argDec RP LC stmts . RC

    RC  shift, and go to state 170


state 135

   61 stmt: compSt .

    $default  reduce using rule 61 (stmt)


state 136

   47 stmts: stmt . stmts
   49      | stmt . error

    error        shift, and go to state 171
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    stmts   go to state 172
    compSt  go to state 135
    stmt    go to state 136
    expr    go to state 137


state 137

   52 stmt: expr . SEMI
   63     | expr . error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    error   shift, and go to state 173
    SEMI    shift, and go to state 174
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 138

   40 funDec: type ID error argDec RP LC stmts . RC

    RC  shift, and go to state 175


state 139

   41 funDec: type ID LP error RP LC stmts . RC

    RC  shift, and go to state 176


state 140

   42 funDec: type ID LP argDec RP error stmts . RC

    RC  shift, and go to state 177


state 141

   43 funDec: type ID LP argDec RP LC error . RC
   62 stmt: error . SEMI
   64     | error . expr SEMI

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RC           shift, and go to state 178
    SEMI         shift, and go to state 152
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 153


state 142

   38 funDec: type ID LP argDec RP LC stmts . RC

    RC  shift, and go to state 179


state 143

   27 arrayExpr: LB expr RB .

    $default  reduce using rule 27 (arrayExpr)


state 144

  138 args: error COMMA . args

    error        shift, and go to state 180
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 137 (args)

    expr  go to state 104
    args  go to state 181


state 145

  134 expr: ID LP error RP .

    $default  reduce using rule 134 (expr)


state 146

  139 args: expr error . args

    error        shift, and go to state 180
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 137 (args)

    expr  go to state 104
    args  go to state 182


state 147

  135 args: expr COMMA . args
  140     | expr COMMA . error

    error        shift, and go to state 183
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 137 (args)

    expr  go to state 104
    args  go to state 184


state 148

  122 expr: ID LP args RP .

    $default  reduce using rule 122 (expr)


state 149

   26 arrayExpr: arrayExpr LB expr . RB
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    RB      shift, and go to state 185
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 150

   29 arrayExprDec: LB INT . RB

    RB  shift, and go to state 186


state 151

   28 arrayExprDec: arrayExprDec LB . INT RB

    INT  shift, and go to state 187


state 152

   62 stmt: error SEMI .

    $default  reduce using rule 62 (stmt)


state 153

   64 stmt: error expr . SEMI
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    SEMI    shift, and go to state 188
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 154

   67 stmt: BREAK error .

    $default  reduce using rule 67 (stmt)


state 155

   54 stmt: BREAK SEMI .

    $default  reduce using rule 54 (stmt)


state 156

   68 stmt: CONTINUE error .

    $default  reduce using rule 68 (stmt)


state 157

   55 stmt: CONTINUE SEMI .

    $default  reduce using rule 55 (stmt)


state 158

   72 stmt: FOR error . forexpr SEMI logexpr SEMI forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    SEMI  reduce using rule 83 (forexpr)

    forexpr  go to state 190
    expr     go to state 191


state 159

   59 stmt: FOR LP . forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP . forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR LP . forexpr SEMI logexpr error forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    SEMI  reduce using rule 83 (forexpr)

    forexpr  go to state 192
    expr     go to state 191


state 160

   75 stmt: IF error . logexpr RP stmt ELSE stmt
   79     | IF error . logexpr RP stmt

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 196
    expr     go to state 197


state 161

   56 stmt: IF LP . logexpr RP stmt
   57     | IF LP . logexpr RP stmt ELSE stmt
   76     | IF LP . error RP stmt ELSE stmt
   77     | IF LP . logexpr error stmt ELSE stmt
   78     | IF LP . logexpr RP error ELSE stmt
   80     | IF LP . error RP stmt
   81     | IF LP . logexpr error stmt

    error        shift, and go to state 198
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 199
    expr     go to state 197


state 162

   65 stmt: RETURN error . SEMI

    SEMI  shift, and go to state 200


state 163

   53 stmt: RETURN expr . SEMI
   66     | RETURN expr . error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    error   shift, and go to state 201
    SEMI    shift, and go to state 202
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93


state 164

   69 stmt: WHILE error . logexpr RP stmt

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 203
    expr     go to state 197


state 165

   58 stmt: WHILE LP . logexpr RP stmt
   70     | WHILE LP . error RP stmt
   71     | WHILE LP . logexpr error stmt

    error        shift, and go to state 204
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 205
    expr     go to state 197


state 166

   51 compSt: LC error . RC
   62 stmt: error . SEMI
   64     | error . expr SEMI

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RC           shift, and go to state 206
    SEMI         shift, and go to state 152
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 153


state 167

   50 compSt: LC stmts . RC

    RC  shift, and go to state 207


state 168

   60 stmt: varDec SEMI .

    $default  reduce using rule 60 (stmt)


state 169

   17 varDec: type ID .
   18       | type ID . ASSIGN expr

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 17 (varDec)


state 170

   39 funDec: type error LP argDec RP LC stmts RC .

    $default  reduce using rule 39 (funDec)


state 171

   49 stmts: stmt error .
   62 stmt: error . SEMI
   64     | error . expr SEMI

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    SEMI         shift, and go to state 152
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    $default  reduce using rule 49 (stmts)

    expr  go to state 153


state 172

   47 stmts: stmt stmts .

    $default  reduce using rule 47 (stmts)


state 173

   63 stmt: expr error .

    $default  reduce using rule 63 (stmt)


state 174

   52 stmt: expr SEMI .

    $default  reduce using rule 52 (stmt)


state 175

   40 funDec: type ID error argDec RP LC stmts RC .

    $default  reduce using rule 40 (funDec)


state 176

   41 funDec: type ID LP error RP LC stmts RC .

    $default  reduce using rule 41 (funDec)


state 177

   42 funDec: type ID LP argDec RP error stmts RC .

    $default  reduce using rule 42 (funDec)


state 178

   43 funDec: type ID LP argDec RP LC error RC .

    $default  reduce using rule 43 (funDec)


state 179

   38 funDec: type ID LP argDec RP LC stmts RC .

    $default  reduce using rule 38 (funDec)


state 180

  138 args: error . COMMA args

    COMMA  shift, and go to state 144


state 181

  138 args: error COMMA args .

    $default  reduce using rule 138 (args)


state 182

  139 args: expr error args .

    $default  reduce using rule 139 (args)


state 183

  138 args: error . COMMA args
  140     | expr COMMA error .

    COMMA  shift, and go to state 144

    $default  reduce using rule 140 (args)


state 184

  135 args: expr COMMA args .

    $default  reduce using rule 135 (args)


state 185

   26 arrayExpr: arrayExpr LB expr RB .

    $default  reduce using rule 26 (arrayExpr)


state 186

   29 arrayExprDec: LB INT RB .

    $default  reduce using rule 29 (arrayExprDec)


state 187

   28 arrayExprDec: arrayExprDec LB INT . RB

    RB  shift, and go to state 208


state 188

   64 stmt: error expr SEMI .

    $default  reduce using rule 64 (stmt)


state 189

   84 forexpr: error .

    $default  reduce using rule 84 (forexpr)


state 190

   72 stmt: FOR error forexpr . SEMI logexpr SEMI forexpr RP stmt

    SEMI  shift, and go to state 209


state 191

   82 forexpr: expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 82 (forexpr)


state 192

   59 stmt: FOR LP forexpr . SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr . SEMI error SEMI forexpr RP stmt
   74     | FOR LP forexpr . SEMI logexpr error forexpr RP stmt

    SEMI  shift, and go to state 210


state 193

   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    EQ           shift, and go to state 211
    LT           shift, and go to state 212
    GT           shift, and go to state 213
    LE           shift, and go to state 214
    GE           shift, and go to state 215
    NE           shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    NOT          shift, and go to state 195

    logexpr  go to state 219
    expr     go to state 197


state 194

   94 logexpr: LP . logexpr RP
  111        | LP . error RP
  112        | LP . logexpr error
  120 expr: LP . expr RP

    error        shift, and go to state 220
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 221
    expr     go to state 222


state 195

   93 logexpr: NOT . logexpr

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 223
    expr     go to state 197


state 196

   75 stmt: IF error logexpr . RP stmt ELSE stmt
   79     | IF error logexpr . RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    RP   shift, and go to state 224
    AND  shift, and go to state 225
    OR   shift, and go to state 226


state 197

   87 logexpr: expr . NE expr
   88        | expr . EQ expr
   89        | expr . GE expr
   90        | expr . LE expr
   91        | expr . GT expr
   92        | expr . LT expr
   98        | expr . error expr
   99        | expr . NE error
  101        | expr . EQ error
  103        | expr . GE error
  105        | expr . LE error
  107        | expr . GT error
  109        | expr . LT error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    error   shift, and go to state 227
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93
    EQ      shift, and go to state 228
    LT      shift, and go to state 229
    GT      shift, and go to state 230
    LE      shift, and go to state 231
    GE      shift, and go to state 232
    NE      shift, and go to state 233


state 198

   76 stmt: IF LP error . RP stmt ELSE stmt
   80     | IF LP error . RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    RP           shift, and go to state 234
    MINUS        shift, and go to state 66
    EQ           shift, and go to state 211
    LT           shift, and go to state 212
    GT           shift, and go to state 213
    LE           shift, and go to state 214
    GE           shift, and go to state 215
    NE           shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    NOT          shift, and go to state 195

    logexpr  go to state 219
    expr     go to state 197


state 199

   56 stmt: IF LP logexpr . RP stmt
   57     | IF LP logexpr . RP stmt ELSE stmt
   77     | IF LP logexpr . error stmt ELSE stmt
   78     | IF LP logexpr . RP error ELSE stmt
   81     | IF LP logexpr . error stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 235
    RP     shift, and go to state 236
    AND    shift, and go to state 225
    OR     shift, and go to state 226


state 200

   65 stmt: RETURN error SEMI .

    $default  reduce using rule 65 (stmt)


state 201

   66 stmt: RETURN expr error .

    $default  reduce using rule 66 (stmt)


state 202

   53 stmt: RETURN expr SEMI .

    $default  reduce using rule 53 (stmt)


state 203

   69 stmt: WHILE error logexpr . RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    RP   shift, and go to state 237
    AND  shift, and go to state 225
    OR   shift, and go to state 226


state 204

   70 stmt: WHILE LP error . RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    RP           shift, and go to state 238
    MINUS        shift, and go to state 66
    EQ           shift, and go to state 211
    LT           shift, and go to state 212
    GT           shift, and go to state 213
    LE           shift, and go to state 214
    GE           shift, and go to state 215
    NE           shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    NOT          shift, and go to state 195

    logexpr  go to state 219
    expr     go to state 197


state 205

   58 stmt: WHILE LP logexpr . RP stmt
   71     | WHILE LP logexpr . error stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 239
    RP     shift, and go to state 240
    AND    shift, and go to state 225
    OR     shift, and go to state 226


state 206

   51 compSt: LC error RC .

    $default  reduce using rule 51 (compSt)


state 207

   50 compSt: LC stmts RC .

    $default  reduce using rule 50 (compSt)


state 208

   28 arrayExprDec: arrayExprDec LB INT RB .

    $default  reduce using rule 28 (arrayExprDec)


state 209

   72 stmt: FOR error forexpr SEMI . logexpr SEMI forexpr RP stmt

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 241
    expr     go to state 197


state 210

   59 stmt: FOR LP forexpr SEMI . logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr SEMI . error SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI . logexpr error forexpr RP stmt

    error        shift, and go to state 242
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 243
    expr     go to state 197


state 211

  100 logexpr: error EQ . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 244


state 212

  108 logexpr: error LT . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 245


state 213

  106 logexpr: error GT . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 246


state 214

  104 logexpr: error LE . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 247


state 215

  102 logexpr: error GE . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 248


state 216

   97 logexpr: error NE . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 249


state 217

   95 logexpr: error AND . logexpr

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 250
    expr     go to state 197


state 218

   96 logexpr: error OR . logexpr

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 251
    expr     go to state 197


state 219

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
  110        | error logexpr . RP

    RP   shift, and go to state 252
    AND  shift, and go to state 225
    OR   shift, and go to state 226


state 220

   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  111        | LP error . RP

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    RP           shift, and go to state 253
    MINUS        shift, and go to state 66
    EQ           shift, and go to state 211
    LT           shift, and go to state 212
    GT           shift, and go to state 213
    LE           shift, and go to state 214
    GE           shift, and go to state 215
    NE           shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    NOT          shift, and go to state 195

    logexpr  go to state 219
    expr     go to state 197


state 221

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   94        | LP logexpr . RP
  112        | LP logexpr . error

    error  shift, and go to state 254
    RP     shift, and go to state 255
    AND    shift, and go to state 225
    OR     shift, and go to state 226


state 222

   87 logexpr: expr . NE expr
   88        | expr . EQ expr
   89        | expr . GE expr
   90        | expr . LE expr
   91        | expr . GT expr
   92        | expr . LT expr
   98        | expr . error expr
   99        | expr . NE error
  101        | expr . EQ error
  103        | expr . GE error
  105        | expr . LE error
  107        | expr . GT error
  109        | expr . LT error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  120     | LP expr . RP
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    error   shift, and go to state 227
    RP      shift, and go to state 109
    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93
    EQ      shift, and go to state 228
    LT      shift, and go to state 229
    GT      shift, and go to state 230
    LE      shift, and go to state 231
    GE      shift, and go to state 232
    NE      shift, and go to state 233


state 223

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   93        | NOT logexpr .

    $default  reduce using rule 93 (logexpr)


state 224

   75 stmt: IF error logexpr RP . stmt ELSE stmt
   79     | IF error logexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 256
    expr    go to state 137


state 225

   85 logexpr: logexpr AND . logexpr

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 257
    expr     go to state 197


state 226

   86 logexpr: logexpr OR . logexpr

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    NOT          shift, and go to state 195

    logexpr  go to state 258
    expr     go to state 197


state 227

   98 logexpr: expr error . expr

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 259


state 228

   88 logexpr: expr EQ . expr
  101        | expr EQ . error

    error        shift, and go to state 260
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 261


state 229

   92 logexpr: expr LT . expr
  109        | expr LT . error

    error        shift, and go to state 262
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 263


state 230

   91 logexpr: expr GT . expr
  107        | expr GT . error

    error        shift, and go to state 264
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 265


state 231

   90 logexpr: expr LE . expr
  105        | expr LE . error

    error        shift, and go to state 266
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 267


state 232

   89 logexpr: expr GE . expr
  103        | expr GE . error

    error        shift, and go to state 268
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 269


state 233

   87 logexpr: expr NE . expr
   99        | expr NE . error

    error        shift, and go to state 270
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 271


state 234

   76 stmt: IF LP error RP . stmt ELSE stmt
   80     | IF LP error RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 272
    expr    go to state 137


state 235

   77 stmt: IF LP logexpr error . stmt ELSE stmt
   81     | IF LP logexpr error . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 273
    expr    go to state 137


state 236

   56 stmt: IF LP logexpr RP . stmt
   57     | IF LP logexpr RP . stmt ELSE stmt
   78     | IF LP logexpr RP . error ELSE stmt

    error        shift, and go to state 274
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 275
    expr    go to state 137


state 237

   69 stmt: WHILE error logexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 276
    expr    go to state 137


state 238

   70 stmt: WHILE LP error RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 277
    expr    go to state 137


state 239

   71 stmt: WHILE LP logexpr error . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 278
    expr    go to state 137


state 240

   58 stmt: WHILE LP logexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 279
    expr    go to state 137


state 241

   72 stmt: FOR error forexpr SEMI logexpr . SEMI forexpr RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    SEMI  shift, and go to state 280
    AND   shift, and go to state 225
    OR    shift, and go to state 226


state 242

   73 stmt: FOR LP forexpr SEMI error . SEMI forexpr RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP

    error        shift, and go to state 193
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    SEMI         shift, and go to state 281
    LP           shift, and go to state 194
    MINUS        shift, and go to state 66
    EQ           shift, and go to state 211
    LT           shift, and go to state 212
    GT           shift, and go to state 213
    LE           shift, and go to state 214
    GE           shift, and go to state 215
    NE           shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    NOT          shift, and go to state 195

    logexpr  go to state 219
    expr     go to state 197


state 243

   59 stmt: FOR LP forexpr SEMI logexpr . SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI logexpr . error forexpr RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 282
    SEMI   shift, and go to state 283
    AND    shift, and go to state 225
    OR     shift, and go to state 226


state 244

  100 logexpr: error EQ expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 100 (logexpr)


state 245

  108 logexpr: error LT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 108 (logexpr)


state 246

  106 logexpr: error GT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 106 (logexpr)


state 247

  104 logexpr: error LE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 104 (logexpr)


state 248

  102 logexpr: error GE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 102 (logexpr)


state 249

   97 logexpr: error NE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 97 (logexpr)


state 250

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   95        | error AND logexpr .

    $default  reduce using rule 95 (logexpr)


state 251

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   96        | error OR logexpr .

    AND  shift, and go to state 225

    $default  reduce using rule 96 (logexpr)


state 252

  110 logexpr: error logexpr RP .

    $default  reduce using rule 110 (logexpr)


state 253

  111 logexpr: LP error RP .

    $default  reduce using rule 111 (logexpr)


state 254

  112 logexpr: LP logexpr error .

    $default  reduce using rule 112 (logexpr)


state 255

   94 logexpr: LP logexpr RP .

    $default  reduce using rule 94 (logexpr)


state 256

   75 stmt: IF error logexpr RP stmt . ELSE stmt
   79     | IF error logexpr RP stmt .

    ELSE  shift, and go to state 284

    $default  reduce using rule 79 (stmt)


state 257

   85 logexpr: logexpr . AND logexpr
   85        | logexpr AND logexpr .
   86        | logexpr . OR logexpr

    $default  reduce using rule 85 (logexpr)


state 258

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   86        | logexpr OR logexpr .

    AND  shift, and go to state 225

    $default  reduce using rule 86 (logexpr)


state 259

   98 logexpr: expr error expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 98 (logexpr)


state 260

  101 logexpr: expr EQ error .

    $default  reduce using rule 101 (logexpr)


state 261

   88 logexpr: expr EQ expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 88 (logexpr)


state 262

  109 logexpr: expr LT error .

    $default  reduce using rule 109 (logexpr)


state 263

   92 logexpr: expr LT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 92 (logexpr)


state 264

  107 logexpr: expr GT error .

    $default  reduce using rule 107 (logexpr)


state 265

   91 logexpr: expr GT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 91 (logexpr)


state 266

  105 logexpr: expr LE error .

    $default  reduce using rule 105 (logexpr)


state 267

   90 logexpr: expr LE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 90 (logexpr)


state 268

  103 logexpr: expr GE error .

    $default  reduce using rule 103 (logexpr)


state 269

   89 logexpr: expr GE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 89 (logexpr)


state 270

   99 logexpr: expr NE error .

    $default  reduce using rule 99 (logexpr)


state 271

   87 logexpr: expr NE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | expr . ASSIGN expr
  119     | expr . DOT expr
  129     | expr . MINUS error
  130     | expr . PLUS error
  131     | expr . MULT error
  132     | expr . DIV error

    DOT     shift, and go to state 88
    PLUS    shift, and go to state 89
    DIV     shift, and go to state 90
    MINUS   shift, and go to state 91
    MULT    shift, and go to state 92
    ASSIGN  shift, and go to state 93

    $default  reduce using rule 87 (logexpr)


state 272

   76 stmt: IF LP error RP stmt . ELSE stmt
   80     | IF LP error RP stmt .

    ELSE  shift, and go to state 285

    $default  reduce using rule 80 (stmt)


state 273

   77 stmt: IF LP logexpr error stmt . ELSE stmt
   81     | IF LP logexpr error stmt .

    ELSE  shift, and go to state 286

    $default  reduce using rule 81 (stmt)


state 274

   62 stmt: error . SEMI
   64     | error . expr SEMI
   78     | IF LP logexpr RP error . ELSE stmt

    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    ELSE         shift, and go to state 287
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    SEMI         shift, and go to state 152
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    expr  go to state 153


state 275

   56 stmt: IF LP logexpr RP stmt .
   57     | IF LP logexpr RP stmt . ELSE stmt

    ELSE  shift, and go to state 288

    $default  reduce using rule 56 (stmt)


state 276

   69 stmt: WHILE error logexpr RP stmt .

    $default  reduce using rule 69 (stmt)


state 277

   70 stmt: WHILE LP error RP stmt .

    $default  reduce using rule 70 (stmt)


state 278

   71 stmt: WHILE LP logexpr error stmt .

    $default  reduce using rule 71 (stmt)


state 279

   58 stmt: WHILE LP logexpr RP stmt .

    $default  reduce using rule 58 (stmt)


state 280

   72 stmt: FOR error forexpr SEMI logexpr SEMI . forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 289
    expr     go to state 191


state 281

   73 stmt: FOR LP forexpr SEMI error SEMI . forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 290
    expr     go to state 191


state 282

   74 stmt: FOR LP forexpr SEMI logexpr error . forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 291
    expr     go to state 191


state 283

   59 stmt: FOR LP forexpr SEMI logexpr SEMI . forexpr RP stmt

    error        shift, and go to state 189
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    ID           shift, and go to state 62
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 292
    expr     go to state 191


state 284

   75 stmt: IF error logexpr RP stmt ELSE . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 293
    expr    go to state 137


state 285

   76 stmt: IF LP error RP stmt ELSE . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 294
    expr    go to state 137


state 286

   77 stmt: IF LP logexpr error stmt ELSE . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 295
    expr    go to state 137


state 287

   78 stmt: IF LP logexpr RP error ELSE . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 296
    expr    go to state 137


state 288

   57 stmt: IF LP logexpr RP stmt ELSE . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 297
    expr    go to state 137


state 289

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr . RP stmt

    RP  shift, and go to state 298


state 290

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr . RP stmt

    RP  shift, and go to state 299


state 291

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr . RP stmt

    RP  shift, and go to state 300


state 292

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr . RP stmt

    RP  shift, and go to state 301


state 293

   75 stmt: IF error logexpr RP stmt ELSE stmt .

    $default  reduce using rule 75 (stmt)


state 294

   76 stmt: IF LP error RP stmt ELSE stmt .

    $default  reduce using rule 76 (stmt)


state 295

   77 stmt: IF LP logexpr error stmt ELSE stmt .

    $default  reduce using rule 77 (stmt)


state 296

   78 stmt: IF LP logexpr RP error ELSE stmt .

    $default  reduce using rule 78 (stmt)


state 297

   57 stmt: IF LP logexpr RP stmt ELSE stmt .

    $default  reduce using rule 57 (stmt)


state 298

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 302
    expr    go to state 137


state 299

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 303
    expr    go to state 137


state 300

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 304
    expr    go to state 137


state 301

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr RP . stmt

    error        shift, and go to state 124
    INT          shift, and go to state 60
    STRCONSTANT  shift, and go to state 61
    TYPE         shift, and go to state 20
    ID           shift, and go to state 62
    BREAK        shift, and go to state 125
    CONTINUE     shift, and go to state 126
    VOID         shift, and go to state 21
    FOR          shift, and go to state 127
    IF           shift, and go to state 128
    NEW          shift, and go to state 63
    NUL          shift, and go to state 64
    RETURN       shift, and go to state 129
    WHILE        shift, and go to state 130
    LC           shift, and go to state 131
    LP           shift, and go to state 65
    MINUS        shift, and go to state 66

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 132
    type    go to state 133
    compSt  go to state 135
    stmt    go to state 305
    expr    go to state 137


state 302

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr RP stmt .

    $default  reduce using rule 72 (stmt)


state 303

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr RP stmt .

    $default  reduce using rule 73 (stmt)


state 304

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr RP stmt .

    $default  reduce using rule 74 (stmt)


state 305

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr RP stmt .

    $default  reduce using rule 59 (stmt)
