Terminals unused in grammar

   TRUE
   FALSE


Grammar

    0 $accept: program $end

    1 program: class program
    2        | /* empty */

    3 class: CLASS TYPE inherits LC features RC
    4      | error TYPE inherits LC features RC
    5      | CLASS error inherits LC features RC
    6      | CLASS TYPE inherits error features RC
    7      | CLASS TYPE inherits LC features error

    8 inherits: INHERITS TYPE
    9         | /* empty */
   10         | INHERITS error

   11 features: feature features
   12         | /* empty */

   13 feature: varDec SEMI
   14        | funDec

   15 varDec: varDec COMMA ID
   16       | varDec COMMA ID ASSIGN expr
   17       | type ID
   18       | type ID ASSIGN expr
   19       | /* empty */
   20       | varDec COMMA error
   21       | varDec COMMA error ASSIGN expr
   22       | varDec COMMA ID error expr
   23       | varDec COMMA ID ASSIGN error

   24 array: LB RB
   25      | array LB RB

   26 arrayExpr: arrayExpr LB expr RB
   27          | LB expr RB

   28 arrayExprDec: arrayExprDec LB INT RB
   29             | LB INT RB

   30 argDec: argDec COMMA type ID
   31       | type ID
   32       | /* empty */
   33       | error COMMA type ID
   34       | argDec COMMA error ID
   35       | argDec COMMA type error
   36       | error ID
   37       | type error

   38 funDec: type ID LP argDec RP LC stmts RC
   39       | type error LP argDec RP LC stmts RC
   40       | type ID error argDec RP LC stmts RC
   41       | type ID LP error RP LC stmts RC
   42       | type ID LP argDec RP error stmts RC
   43       | type ID LP argDec RP LC error RC

   44 type: TYPE
   45     | TYPE array
   46     | VOID

   47 stmts: stmt stmts
   48      | /* empty */
   49      | stmt error

   50 compSt: LC stmts RC
   51       | LC error RC

   52 stmt: expr SEMI
   53     | RETURN expr SEMI
   54     | BREAK SEMI
   55     | CONTINUE SEMI
   56     | IF LP logexpr RP stmt
   57     | IF LP logexpr RP stmt ELSE stmt
   58     | WHILE LP logexpr RP stmt
   59     | FOR LP forexpr SEMI logexpr SEMI forexpr RP stmt
   60     | varDec SEMI
   61     | compSt
   62     | error SEMI
   63     | expr error
   64     | error expr SEMI
   65     | RETURN error SEMI
   66     | RETURN expr error
   67     | BREAK error
   68     | CONTINUE error
   69     | WHILE error logexpr RP stmt
   70     | WHILE LP error RP stmt
   71     | WHILE LP logexpr error stmt
   72     | FOR error forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI logexpr error forexpr RP stmt
   75     | IF error logexpr RP stmt ELSE stmt
   76     | IF LP error RP stmt ELSE stmt
   77     | IF LP logexpr error stmt ELSE stmt
   78     | IF LP logexpr RP error ELSE stmt
   79     | IF error logexpr RP stmt
   80     | IF LP error RP stmt
   81     | IF LP logexpr error stmt

   82 forexpr: expr
   83        | /* empty */
   84        | error

   85 logexpr: logexpr AND logexpr
   86        | logexpr OR logexpr
   87        | expr NE expr
   88        | expr EQ expr
   89        | expr GE expr
   90        | expr LE expr
   91        | expr GT expr
   92        | expr LT expr
   93        | NOT logexpr
   94        | LP logexpr RP
   95        | error AND logexpr
   96        | error OR logexpr
   97        | error NE expr
   98        | expr error expr
   99        | expr NE error
  100        | error EQ expr
  101        | expr EQ error
  102        | error GE expr
  103        | expr GE error
  104        | error LE expr
  105        | expr LE error
  106        | error GT expr
  107        | expr GT error
  108        | error LT expr
  109        | expr LT error
  110        | error logexpr RP
  111        | LP error RP
  112        | LP logexpr error

  113 expr: expr MINUS expr
  114     | expr PLUS expr
  115     | expr MULT expr
  116     | expr DIV expr
  117     | ID ASSIGN expr
  118     | ID arrayExpr ASSIGN expr
  119     | ID arrayExpr
  120     | ID DOT ID ASSIGN expr
  121     | LP expr RP
  122     | MINUS expr
  123     | ID LP args RP
  124     | ID DOT ID LP args RP
  125     | ID DOT ID
  126     | NEW TYPE arrayExprDec
  127     | NEW TYPE
  128     | ID
  129     | STRCONSTANT
  130     | INT
  131     | NUL
  132     | expr MINUS error
  133     | expr PLUS error
  134     | expr MULT error
  135     | expr DIV error
  136     | MINUS error
  137     | ID LP error RP
  138     | error LP RP
  139     | NEW error LP RP
  140     | error TYPE LP RP

  141 args: expr COMMA args
  142     | expr
  143     | /* empty */
  144     | error COMMA args
  145     | expr error args
  146     | expr COMMA error


Terminals, with rules where they appear

$end (0) 0
error (256) 4 5 6 7 10 20 21 22 23 33 34 35 36 37 39 40 41 42 43 49
    51 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    84 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 132 133 134 135 136 137 138 139 140 144 145 146
INT (258) 28 29 130
STRCONSTANT (259) 129
TYPE (260) 3 4 6 7 8 44 45 126 127 140
ID (261) 15 16 17 18 22 23 30 31 33 34 36 38 40 41 42 43 117 118 119
    120 123 124 125 128 137
CLASS (262) 3 5 6 7
COMMA (263) 15 16 20 21 22 23 30 33 34 35 141 144 146
BREAK (264) 54 67
CONTINUE (265) 55 68
ELSE (266) 57 75 76 77 78
VOID (267) 46
FOR (268) 59 72 73 74
IF (269) 56 57 75 76 77 78 79 80 81
INHERITS (270) 8 10
NEW (271) 126 127 139
NUL (272) 131
RETURN (273) 53 65 66
TRUE (274)
WHILE (275) 58 69 70 71
LC (276) 3 4 5 7 38 39 40 41 43 50 51
RC (277) 3 4 5 6 38 39 40 41 42 43 50 51
LB (278) 24 25 26 27 28 29
RB (279) 24 25 26 27 28 29
SEMI (280) 13 52 53 54 55 59 60 62 64 65 72 73 74
LP (281) 38 39 41 42 43 56 57 58 59 70 71 73 74 76 77 78 80 81 94 111
    112 121 123 124 137 138 139 140
RP (282) 38 39 40 41 42 43 56 57 58 59 69 70 72 73 74 75 76 78 79 80
    94 110 111 121 123 124 137 138 139 140
DOT (283) 120 124 125
PLUS (284) 114 133
DIV (285) 116 135
MINUS (286) 113 122 132 136
MULT (287) 115 134
ASSIGN (288) 16 18 21 23 117 118 120
EQ (289) 88 100 101
LT (290) 92 108 109
GT (291) 91 106 107
LE (292) 90 104 105
GE (293) 89 102 103
NE (294) 87 97 99
AND (295) 85 95
OR (296) 86 96
NOT (297) 93
FALSE (298)
LOWER_THAN_ELSE (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0 1
class (47)
    on left: 3 4 5 6 7, on right: 1
inherits (48)
    on left: 8 9 10, on right: 3 4 5 6 7
features (49)
    on left: 11 12, on right: 3 4 5 6 7 11
feature (50)
    on left: 13 14, on right: 11
varDec (51)
    on left: 15 16 17 18 19 20 21 22 23, on right: 13 15 16 20 21 22
    23 60
array (52)
    on left: 24 25, on right: 25 45
arrayExpr (53)
    on left: 26 27, on right: 26 118 119
arrayExprDec (54)
    on left: 28 29, on right: 28 126
argDec (55)
    on left: 30 31 32 33 34 35 36 37, on right: 30 34 35 38 39 40 42
    43
funDec (56)
    on left: 38 39 40 41 42 43, on right: 14
type (57)
    on left: 44 45 46, on right: 17 18 30 31 33 35 37 38 39 40 41 42
    43
stmts (58)
    on left: 47 48 49, on right: 38 39 40 41 42 47 50
compSt (59)
    on left: 50 51, on right: 61
stmt (60)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77 78 79 80 81, on right: 47 49 56 57 58 59
    69 70 71 72 73 74 75 76 77 78 79 80 81
forexpr (61)
    on left: 82 83 84, on right: 59 72 73 74
logexpr (62)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104 105 106 107 108 109 110 111 112, on right: 56 57 58 59
    69 71 72 74 75 77 78 79 81 85 86 93 94 95 96 110 112
expr (63)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 135 136 137 138 139 140, on right:
    16 18 21 22 26 27 52 53 63 64 66 82 87 88 89 90 91 92 97 98 99
    100 101 102 103 104 105 106 107 108 109 113 114 115 116 117 118
    120 121 122 132 133 134 135 141 142 145 146
args (64)
    on left: 141 142 143 144 145 146, on right: 123 124 141 144 145


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program  go to state 3
    class    go to state 4


state 1

    4 class: error . TYPE inherits LC features RC

    TYPE  shift, and go to state 5


state 2

    3 class: CLASS . TYPE inherits LC features RC
    5      | CLASS . error inherits LC features RC
    6      | CLASS . TYPE inherits error features RC
    7      | CLASS . TYPE inherits LC features error

    error  shift, and go to state 6
    TYPE   shift, and go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: class . program

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program  go to state 9
    class    go to state 4


state 5

    4 class: error TYPE . inherits LC features RC

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 11


state 6

    5 class: CLASS error . inherits LC features RC

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 12


state 7

    3 class: CLASS TYPE . inherits LC features RC
    6      | CLASS TYPE . inherits error features RC
    7      | CLASS TYPE . inherits LC features error

    INHERITS  shift, and go to state 10

    $default  reduce using rule 9 (inherits)

    inherits  go to state 13


state 8

    0 $accept: program $end .

    $default  accept


state 9

    1 program: class program .

    $default  reduce using rule 1 (program)


state 10

    8 inherits: INHERITS . TYPE
   10         | INHERITS . error

    error  shift, and go to state 14
    TYPE   shift, and go to state 15


state 11

    4 class: error TYPE inherits . LC features RC

    LC  shift, and go to state 16


state 12

    5 class: CLASS error inherits . LC features RC

    LC  shift, and go to state 17


state 13

    3 class: CLASS TYPE inherits . LC features RC
    6      | CLASS TYPE inherits . error features RC
    7      | CLASS TYPE inherits . LC features error

    error  shift, and go to state 18
    LC     shift, and go to state 19


state 14

   10 inherits: INHERITS error .

    $default  reduce using rule 10 (inherits)


state 15

    8 inherits: INHERITS TYPE .

    $default  reduce using rule 8 (inherits)


state 16

    4 class: error TYPE inherits LC . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 22
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 17

    5 class: CLASS error inherits LC . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 27
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 18

    6 class: CLASS TYPE inherits error . features RC

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    RC        reduce using rule 12 (features)
    $default  reduce using rule 19 (varDec)

    features  go to state 28
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 19

    3 class: CLASS TYPE inherits LC . features RC
    7      | CLASS TYPE inherits LC . features error

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    COMMA     reduce using rule 19 (varDec)
    SEMI      reduce using rule 19 (varDec)
    $default  reduce using rule 12 (features)

    features  go to state 29
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 20

   44 type: TYPE .
   45     | TYPE . array

    LB  shift, and go to state 30

    $default  reduce using rule 44 (type)

    array  go to state 31


state 21

   46 type: VOID .

    $default  reduce using rule 46 (type)


state 22

    4 class: error TYPE inherits LC features . RC

    RC  shift, and go to state 32


state 23

   11 features: feature . features

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    COMMA     reduce using rule 19 (varDec)
    SEMI      reduce using rule 19 (varDec)
    $default  reduce using rule 12 (features)

    features  go to state 33
    feature   go to state 23
    varDec    go to state 24
    funDec    go to state 25
    type      go to state 26


state 24

   13 feature: varDec . SEMI
   15 varDec: varDec . COMMA ID
   16       | varDec . COMMA ID ASSIGN expr
   20       | varDec . COMMA error
   21       | varDec . COMMA error ASSIGN expr
   22       | varDec . COMMA ID error expr
   23       | varDec . COMMA ID ASSIGN error

    COMMA  shift, and go to state 34
    SEMI   shift, and go to state 35


state 25

   14 feature: funDec .

    $default  reduce using rule 14 (feature)


state 26

   17 varDec: type . ID
   18       | type . ID ASSIGN expr
   38 funDec: type . ID LP argDec RP LC stmts RC
   39       | type . error LP argDec RP LC stmts RC
   40       | type . ID error argDec RP LC stmts RC
   41       | type . ID LP error RP LC stmts RC
   42       | type . ID LP argDec RP error stmts RC
   43       | type . ID LP argDec RP LC error RC

    error  shift, and go to state 36
    ID     shift, and go to state 37


state 27

    5 class: CLASS error inherits LC features . RC

    RC  shift, and go to state 38


state 28

    6 class: CLASS TYPE inherits error features . RC

    RC  shift, and go to state 39


state 29

    3 class: CLASS TYPE inherits LC features . RC
    7      | CLASS TYPE inherits LC features . error

    error  shift, and go to state 40
    RC     shift, and go to state 41


state 30

   24 array: LB . RB

    RB  shift, and go to state 42


state 31

   25 array: array . LB RB
   45 type: TYPE array .

    LB  shift, and go to state 43

    $default  reduce using rule 45 (type)


state 32

    4 class: error TYPE inherits LC features RC .

    $default  reduce using rule 4 (class)


state 33

   11 features: feature features .

    $default  reduce using rule 11 (features)


state 34

   15 varDec: varDec COMMA . ID
   16       | varDec COMMA . ID ASSIGN expr
   20       | varDec COMMA . error
   21       | varDec COMMA . error ASSIGN expr
   22       | varDec COMMA . ID error expr
   23       | varDec COMMA . ID ASSIGN error

    error  shift, and go to state 44
    ID     shift, and go to state 45


state 35

   13 feature: varDec SEMI .

    $default  reduce using rule 13 (feature)


state 36

   39 funDec: type error . LP argDec RP LC stmts RC

    LP  shift, and go to state 46


state 37

   17 varDec: type ID .
   18       | type ID . ASSIGN expr
   38 funDec: type ID . LP argDec RP LC stmts RC
   40       | type ID . error argDec RP LC stmts RC
   41       | type ID . LP error RP LC stmts RC
   42       | type ID . LP argDec RP error stmts RC
   43       | type ID . LP argDec RP LC error RC

    error   shift, and go to state 47
    LP      shift, and go to state 48
    ASSIGN  shift, and go to state 49

    COMMA  reduce using rule 17 (varDec)
    SEMI   reduce using rule 17 (varDec)


state 38

    5 class: CLASS error inherits LC features RC .

    $default  reduce using rule 5 (class)


state 39

    6 class: CLASS TYPE inherits error features RC .

    $default  reduce using rule 6 (class)


state 40

    7 class: CLASS TYPE inherits LC features error .

    $default  reduce using rule 7 (class)


state 41

    3 class: CLASS TYPE inherits LC features RC .

    $default  reduce using rule 3 (class)


state 42

   24 array: LB RB .

    $default  reduce using rule 24 (array)


state 43

   25 array: array LB . RB

    RB  shift, and go to state 50


state 44

   20 varDec: varDec COMMA error .
   21       | varDec COMMA error . ASSIGN expr

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 20 (varDec)


state 45

   15 varDec: varDec COMMA ID .
   16       | varDec COMMA ID . ASSIGN expr
   22       | varDec COMMA ID . error expr
   23       | varDec COMMA ID . ASSIGN error

    error   shift, and go to state 52
    ASSIGN  shift, and go to state 53

    COMMA  reduce using rule 15 (varDec)
    SEMI   reduce using rule 15 (varDec)


state 46

   39 funDec: type error LP . argDec RP LC stmts RC

    error  shift, and go to state 54
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 55
    type    go to state 56


state 47

   40 funDec: type ID error . argDec RP LC stmts RC

    error  shift, and go to state 54
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 57
    type    go to state 56


state 48

   38 funDec: type ID LP . argDec RP LC stmts RC
   41       | type ID LP . error RP LC stmts RC
   42       | type ID LP . argDec RP error stmts RC
   43       | type ID LP . argDec RP LC error RC

    error  shift, and go to state 58
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    COMMA  reduce using rule 32 (argDec)
    RP     reduce using rule 32 (argDec)

    argDec  go to state 59
    type    go to state 56


state 49

   18 varDec: type ID ASSIGN . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 68


state 50

   25 array: array LB RB .

    $default  reduce using rule 25 (array)


state 51

   21 varDec: varDec COMMA error ASSIGN . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 69


state 52

   22 varDec: varDec COMMA ID error . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 70


state 53

   16 varDec: varDec COMMA ID ASSIGN . expr
   23       | varDec COMMA ID ASSIGN . error

    error        shift, and go to state 71
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 72


state 54

   33 argDec: error . COMMA type ID
   36       | error . ID

    ID     shift, and go to state 73
    COMMA  shift, and go to state 74


state 55

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   39 funDec: type error LP argDec . RP LC stmts RC

    COMMA  shift, and go to state 75
    RP     shift, and go to state 76


state 56

   31 argDec: type . ID
   37       | type . error

    error  shift, and go to state 77
    ID     shift, and go to state 78


state 57

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   40 funDec: type ID error argDec . RP LC stmts RC

    COMMA  shift, and go to state 75
    RP     shift, and go to state 79


state 58

   33 argDec: error . COMMA type ID
   36       | error . ID
   41 funDec: type ID LP error . RP LC stmts RC

    ID     shift, and go to state 73
    COMMA  shift, and go to state 74
    RP     shift, and go to state 80


state 59

   30 argDec: argDec . COMMA type ID
   34       | argDec . COMMA error ID
   35       | argDec . COMMA type error
   38 funDec: type ID LP argDec . RP LC stmts RC
   42       | type ID LP argDec . RP error stmts RC
   43       | type ID LP argDec . RP LC error RC

    COMMA  shift, and go to state 75
    RP     shift, and go to state 81


state 60

  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83


state 61

  130 expr: INT .

    $default  reduce using rule 130 (expr)


state 62

  129 expr: STRCONSTANT .

    $default  reduce using rule 129 (expr)


state 63

  117 expr: ID . ASSIGN expr
  118     | ID . arrayExpr ASSIGN expr
  119     | ID . arrayExpr
  120     | ID . DOT ID ASSIGN expr
  123     | ID . LP args RP
  124     | ID . DOT ID LP args RP
  125     | ID . DOT ID
  128     | ID .
  137     | ID . LP error RP

    LB      shift, and go to state 84
    LP      shift, and go to state 85
    DOT     shift, and go to state 86
    ASSIGN  shift, and go to state 87

    $default  reduce using rule 128 (expr)

    arrayExpr  go to state 88


state 64

  126 expr: NEW . TYPE arrayExprDec
  127     | NEW . TYPE
  139     | NEW . error LP RP

    error  shift, and go to state 89
    TYPE   shift, and go to state 90


state 65

  131 expr: NUL .

    $default  reduce using rule 131 (expr)


state 66

  121 expr: LP . expr RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 91


state 67

  122 expr: MINUS . expr
  136     | MINUS . error

    error        shift, and go to state 92
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 93


state 68

   18 varDec: type ID ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 18 (varDec)


state 69

   21 varDec: varDec COMMA error ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 21 (varDec)


state 70

   22 varDec: varDec COMMA ID error expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 22 (varDec)


state 71

   23 varDec: varDec COMMA ID ASSIGN error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 23 (varDec)


state 72

   16 varDec: varDec COMMA ID ASSIGN expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 16 (varDec)


state 73

   36 argDec: error ID .

    $default  reduce using rule 36 (argDec)


state 74

   33 argDec: error COMMA . type ID

    TYPE  shift, and go to state 20
    VOID  shift, and go to state 21

    type  go to state 98


state 75

   30 argDec: argDec COMMA . type ID
   34       | argDec COMMA . error ID
   35       | argDec COMMA . type error

    error  shift, and go to state 99
    TYPE   shift, and go to state 20
    VOID   shift, and go to state 21

    type  go to state 100


state 76

   39 funDec: type error LP argDec RP . LC stmts RC

    LC  shift, and go to state 101


state 77

   37 argDec: type error .

    $default  reduce using rule 37 (argDec)


state 78

   31 argDec: type ID .

    $default  reduce using rule 31 (argDec)


state 79

   40 funDec: type ID error argDec RP . LC stmts RC

    LC  shift, and go to state 102


state 80

   41 funDec: type ID LP error RP . LC stmts RC

    LC  shift, and go to state 103


state 81

   38 funDec: type ID LP argDec RP . LC stmts RC
   42       | type ID LP argDec RP . error stmts RC
   43       | type ID LP argDec RP . LC error RC

    error  shift, and go to state 104
    LC     shift, and go to state 105


state 82

  140 expr: error TYPE . LP RP

    LP  shift, and go to state 106


state 83

  138 expr: error LP . RP

    RP  shift, and go to state 107


state 84

   27 arrayExpr: LB . expr RB

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 108


state 85

  123 expr: ID LP . args RP
  137     | ID LP . error RP

    error        shift, and go to state 109
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 143 (args)

    expr  go to state 110
    args  go to state 111


state 86

  120 expr: ID DOT . ID ASSIGN expr
  124     | ID DOT . ID LP args RP
  125     | ID DOT . ID

    ID  shift, and go to state 112


state 87

  117 expr: ID ASSIGN . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 113


state 88

   26 arrayExpr: arrayExpr . LB expr RB
  118 expr: ID arrayExpr . ASSIGN expr
  119     | ID arrayExpr .

    LB      shift, and go to state 114
    ASSIGN  shift, and go to state 115

    $default  reduce using rule 119 (expr)


state 89

  139 expr: NEW error . LP RP

    LP  shift, and go to state 116


state 90

  126 expr: NEW TYPE . arrayExprDec
  127     | NEW TYPE .

    LB  shift, and go to state 117

    $default  reduce using rule 127 (expr)

    arrayExprDec  go to state 118


state 91

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  121     | LP expr . RP
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    RP     shift, and go to state 119
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 92

  136 expr: MINUS error .
  138     | error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 136 (expr)


state 93

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  122     | MINUS expr .
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    DIV   shift, and go to state 95
    MULT  shift, and go to state 97

    $default  reduce using rule 122 (expr)


state 94

  114 expr: expr PLUS . expr
  133     | expr PLUS . error

    error        shift, and go to state 120
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 121


state 95

  116 expr: expr DIV . expr
  135     | expr DIV . error

    error        shift, and go to state 122
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 123


state 96

  113 expr: expr MINUS . expr
  132     | expr MINUS . error

    error        shift, and go to state 124
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 125


state 97

  115 expr: expr MULT . expr
  134     | expr MULT . error

    error        shift, and go to state 126
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 127


state 98

   33 argDec: error COMMA type . ID

    ID  shift, and go to state 128


state 99

   34 argDec: argDec COMMA error . ID

    ID  shift, and go to state 129


state 100

   30 argDec: argDec COMMA type . ID
   35       | argDec COMMA type . error

    error  shift, and go to state 130
    ID     shift, and go to state 131


state 101

   39 funDec: type error LP argDec RP LC . stmts RC

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 142
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 102

   40 funDec: type ID error argDec RP LC . stmts RC

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 146
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 103

   41 funDec: type ID LP error RP LC . stmts RC

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 147
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 104

   42 funDec: type ID LP argDec RP error . stmts RC

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 148
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 105

   38 funDec: type ID LP argDec RP LC . stmts RC
   43       | type ID LP argDec RP LC . error RC

    error        shift, and go to state 149
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 150
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 106

  140 expr: error TYPE LP . RP

    RP  shift, and go to state 151


state 107

  138 expr: error LP RP .

    $default  reduce using rule 138 (expr)


state 108

   27 arrayExpr: LB expr . RB
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    RB     shift, and go to state 152
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 109

  137 expr: ID LP error . RP
  138     | error . LP RP
  140     | error . TYPE LP RP
  144 args: error . COMMA args

    TYPE   shift, and go to state 82
    COMMA  shift, and go to state 153
    LP     shift, and go to state 83
    RP     shift, and go to state 154


state 110

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error
  141 args: expr . COMMA args
  142     | expr .
  145     | expr . error args
  146     | expr . COMMA error

    error  shift, and go to state 155
    COMMA  shift, and go to state 156
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    RP  reduce using rule 142 (args)


state 111

  123 expr: ID LP args . RP

    RP  shift, and go to state 157


state 112

  120 expr: ID DOT ID . ASSIGN expr
  124     | ID DOT ID . LP args RP
  125     | ID DOT ID .

    LP      shift, and go to state 158
    ASSIGN  shift, and go to state 159

    $default  reduce using rule 125 (expr)


state 113

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  117     | ID ASSIGN expr .
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 117 (expr)


state 114

   26 arrayExpr: arrayExpr LB . expr RB

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 160


state 115

  118 expr: ID arrayExpr ASSIGN . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 161


state 116

  139 expr: NEW error LP . RP

    RP  shift, and go to state 162


state 117

   29 arrayExprDec: LB . INT RB

    INT  shift, and go to state 163


state 118

   28 arrayExprDec: arrayExprDec . LB INT RB
  126 expr: NEW TYPE arrayExprDec .

    LB  shift, and go to state 164

    $default  reduce using rule 126 (expr)


state 119

  121 expr: LP expr RP .

    $default  reduce using rule 121 (expr)


state 120

  133 expr: expr PLUS error .
  138     | error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 133 (expr)


state 121

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  114     | expr PLUS expr .
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    DIV   shift, and go to state 95
    MULT  shift, and go to state 97

    $default  reduce using rule 114 (expr)


state 122

  135 expr: expr DIV error .
  138     | error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 135 (expr)


state 123

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  116     | expr DIV expr .
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    $default  reduce using rule 116 (expr)


state 124

  132 expr: expr MINUS error .
  138     | error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 132 (expr)


state 125

  113 expr: expr . MINUS expr
  113     | expr MINUS expr .
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    DIV   shift, and go to state 95
    MULT  shift, and go to state 97

    $default  reduce using rule 113 (expr)


state 126

  134 expr: expr MULT error .
  138     | error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 134 (expr)


state 127

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  115     | expr MULT expr .
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    $default  reduce using rule 115 (expr)


state 128

   33 argDec: error COMMA type ID .

    $default  reduce using rule 33 (argDec)


state 129

   34 argDec: argDec COMMA error ID .

    $default  reduce using rule 34 (argDec)


state 130

   35 argDec: argDec COMMA type error .

    $default  reduce using rule 35 (argDec)


state 131

   30 argDec: argDec COMMA type ID .

    $default  reduce using rule 30 (argDec)


state 132

   62 stmt: error . SEMI
   64     | error . expr SEMI
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    SEMI         shift, and go to state 165
    LP           shift, and go to state 166
    MINUS        shift, and go to state 67

    expr  go to state 167


state 133

   54 stmt: BREAK . SEMI
   67     | BREAK . error

    error  shift, and go to state 168
    SEMI   shift, and go to state 169


state 134

   55 stmt: CONTINUE . SEMI
   68     | CONTINUE . error

    error  shift, and go to state 170
    SEMI   shift, and go to state 171


state 135

   59 stmt: FOR . LP forexpr SEMI logexpr SEMI forexpr RP stmt
   72     | FOR . error forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR . LP forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR . LP forexpr SEMI logexpr error forexpr RP stmt

    error  shift, and go to state 172
    LP     shift, and go to state 173


state 136

   56 stmt: IF . LP logexpr RP stmt
   57     | IF . LP logexpr RP stmt ELSE stmt
   75     | IF . error logexpr RP stmt ELSE stmt
   76     | IF . LP error RP stmt ELSE stmt
   77     | IF . LP logexpr error stmt ELSE stmt
   78     | IF . LP logexpr RP error ELSE stmt
   79     | IF . error logexpr RP stmt
   80     | IF . LP error RP stmt
   81     | IF . LP logexpr error stmt

    error  shift, and go to state 174
    LP     shift, and go to state 175


state 137

   53 stmt: RETURN . expr SEMI
   65     | RETURN . error SEMI
   66     | RETURN . expr error

    error        shift, and go to state 176
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 177


state 138

   58 stmt: WHILE . LP logexpr RP stmt
   69     | WHILE . error logexpr RP stmt
   70     | WHILE . LP error RP stmt
   71     | WHILE . LP logexpr error stmt

    error  shift, and go to state 178
    LP     shift, and go to state 179


state 139

   50 compSt: LC . stmts RC
   51       | LC . error RC

    error        shift, and go to state 180
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 181
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 140

   15 varDec: varDec . COMMA ID
   16       | varDec . COMMA ID ASSIGN expr
   20       | varDec . COMMA error
   21       | varDec . COMMA error ASSIGN expr
   22       | varDec . COMMA ID error expr
   23       | varDec . COMMA ID ASSIGN error
   60 stmt: varDec . SEMI

    COMMA  shift, and go to state 34
    SEMI   shift, and go to state 182


state 141

   17 varDec: type . ID
   18       | type . ID ASSIGN expr

    ID  shift, and go to state 183


state 142

   39 funDec: type error LP argDec RP LC stmts . RC

    RC  shift, and go to state 184


state 143

   61 stmt: compSt .

    $default  reduce using rule 61 (stmt)


state 144

   47 stmts: stmt . stmts
   49      | stmt . error

    error        shift, and go to state 185
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    RC     reduce using rule 48 (stmts)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    stmts   go to state 186
    compSt  go to state 143
    stmt    go to state 144
    expr    go to state 145


state 145

   52 stmt: expr . SEMI
   63     | expr . error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    error  shift, and go to state 187
    SEMI   shift, and go to state 188
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 146

   40 funDec: type ID error argDec RP LC stmts . RC

    RC  shift, and go to state 189


state 147

   41 funDec: type ID LP error RP LC stmts . RC

    RC  shift, and go to state 190


state 148

   42 funDec: type ID LP argDec RP error stmts . RC

    RC  shift, and go to state 191


state 149

   43 funDec: type ID LP argDec RP LC error . RC
   62 stmt: error . SEMI
   64     | error . expr SEMI
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RC           shift, and go to state 192
    SEMI         shift, and go to state 165
    LP           shift, and go to state 166
    MINUS        shift, and go to state 67

    expr  go to state 167


state 150

   38 funDec: type ID LP argDec RP LC stmts . RC

    RC  shift, and go to state 193


state 151

  140 expr: error TYPE LP RP .

    $default  reduce using rule 140 (expr)


state 152

   27 arrayExpr: LB expr RB .

    $default  reduce using rule 27 (arrayExpr)


state 153

  144 args: error COMMA . args

    error        shift, and go to state 194
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 143 (args)

    expr  go to state 110
    args  go to state 195


state 154

  137 expr: ID LP error RP .

    $default  reduce using rule 137 (expr)


state 155

  145 args: expr error . args

    error        shift, and go to state 194
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 143 (args)

    expr  go to state 110
    args  go to state 196


state 156

  141 args: expr COMMA . args
  146     | expr COMMA . error

    error        shift, and go to state 197
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 143 (args)

    expr  go to state 110
    args  go to state 198


state 157

  123 expr: ID LP args RP .

    $default  reduce using rule 123 (expr)


state 158

  124 expr: ID DOT ID LP . args RP

    error        shift, and go to state 194
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 143 (args)

    expr  go to state 110
    args  go to state 199


state 159

  120 expr: ID DOT ID ASSIGN . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 200


state 160

   26 arrayExpr: arrayExpr LB expr . RB
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    RB     shift, and go to state 201
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 161

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  118     | ID arrayExpr ASSIGN expr .
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 118 (expr)


state 162

  139 expr: NEW error LP RP .

    $default  reduce using rule 139 (expr)


state 163

   29 arrayExprDec: LB INT . RB

    RB  shift, and go to state 202


state 164

   28 arrayExprDec: arrayExprDec LB . INT RB

    INT  shift, and go to state 203


state 165

   62 stmt: error SEMI .

    $default  reduce using rule 62 (stmt)


state 166

  121 expr: LP . expr RP
  138     | error LP . RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    RP           shift, and go to state 107
    MINUS        shift, and go to state 67

    expr  go to state 91


state 167

   64 stmt: error expr . SEMI
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    SEMI   shift, and go to state 204
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 168

   67 stmt: BREAK error .

    $default  reduce using rule 67 (stmt)


state 169

   54 stmt: BREAK SEMI .

    $default  reduce using rule 54 (stmt)


state 170

   68 stmt: CONTINUE error .

    $default  reduce using rule 68 (stmt)


state 171

   55 stmt: CONTINUE SEMI .

    $default  reduce using rule 55 (stmt)


state 172

   72 stmt: FOR error . forexpr SEMI logexpr SEMI forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    SEMI  reduce using rule 83 (forexpr)

    forexpr  go to state 206
    expr     go to state 207


state 173

   59 stmt: FOR LP . forexpr SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP . forexpr SEMI error SEMI forexpr RP stmt
   74     | FOR LP . forexpr SEMI logexpr error forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    SEMI  reduce using rule 83 (forexpr)

    forexpr  go to state 208
    expr     go to state 207


state 174

   75 stmt: IF error . logexpr RP stmt ELSE stmt
   79     | IF error . logexpr RP stmt

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 212
    expr     go to state 213


state 175

   56 stmt: IF LP . logexpr RP stmt
   57     | IF LP . logexpr RP stmt ELSE stmt
   76     | IF LP . error RP stmt ELSE stmt
   77     | IF LP . logexpr error stmt ELSE stmt
   78     | IF LP . logexpr RP error ELSE stmt
   80     | IF LP . error RP stmt
   81     | IF LP . logexpr error stmt

    error        shift, and go to state 214
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 215
    expr     go to state 213


state 176

   65 stmt: RETURN error . SEMI
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    SEMI  shift, and go to state 216
    LP    shift, and go to state 83


state 177

   53 stmt: RETURN expr . SEMI
   66     | RETURN expr . error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    error  shift, and go to state 217
    SEMI   shift, and go to state 218
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97


state 178

   69 stmt: WHILE error . logexpr RP stmt

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 219
    expr     go to state 213


state 179

   58 stmt: WHILE LP . logexpr RP stmt
   70     | WHILE LP . error RP stmt
   71     | WHILE LP . logexpr error stmt

    error        shift, and go to state 220
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 221
    expr     go to state 213


state 180

   51 compSt: LC error . RC
   62 stmt: error . SEMI
   64     | error . expr SEMI
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RC           shift, and go to state 222
    SEMI         shift, and go to state 165
    LP           shift, and go to state 166
    MINUS        shift, and go to state 67

    expr  go to state 167


state 181

   50 compSt: LC stmts . RC

    RC  shift, and go to state 223


state 182

   60 stmt: varDec SEMI .

    $default  reduce using rule 60 (stmt)


state 183

   17 varDec: type ID .
   18       | type ID . ASSIGN expr

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 17 (varDec)


state 184

   39 funDec: type error LP argDec RP LC stmts RC .

    $default  reduce using rule 39 (funDec)


state 185

   49 stmts: stmt error .
   62 stmt: error . SEMI
   64     | error . expr SEMI
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    SEMI         shift, and go to state 165
    LP           shift, and go to state 166
    MINUS        shift, and go to state 67

    RC  reduce using rule 49 (stmts)

    expr  go to state 167


state 186

   47 stmts: stmt stmts .

    $default  reduce using rule 47 (stmts)


state 187

   63 stmt: expr error .

    $default  reduce using rule 63 (stmt)


state 188

   52 stmt: expr SEMI .

    $default  reduce using rule 52 (stmt)


state 189

   40 funDec: type ID error argDec RP LC stmts RC .

    $default  reduce using rule 40 (funDec)


state 190

   41 funDec: type ID LP error RP LC stmts RC .

    $default  reduce using rule 41 (funDec)


state 191

   42 funDec: type ID LP argDec RP error stmts RC .

    $default  reduce using rule 42 (funDec)


state 192

   43 funDec: type ID LP argDec RP LC error RC .

    $default  reduce using rule 43 (funDec)


state 193

   38 funDec: type ID LP argDec RP LC stmts RC .

    $default  reduce using rule 38 (funDec)


state 194

  138 expr: error . LP RP
  140     | error . TYPE LP RP
  144 args: error . COMMA args

    TYPE   shift, and go to state 82
    COMMA  shift, and go to state 153
    LP     shift, and go to state 83


state 195

  144 args: error COMMA args .

    $default  reduce using rule 144 (args)


state 196

  145 args: expr error args .

    $default  reduce using rule 145 (args)


state 197

  138 expr: error . LP RP
  140     | error . TYPE LP RP
  144 args: error . COMMA args
  146     | expr COMMA error .

    TYPE   shift, and go to state 82
    COMMA  shift, and go to state 153
    LP     shift, and go to state 83

    $default  reduce using rule 146 (args)


state 198

  141 args: expr COMMA args .

    $default  reduce using rule 141 (args)


state 199

  124 expr: ID DOT ID LP args . RP

    RP  shift, and go to state 224


state 200

  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  120     | ID DOT ID ASSIGN expr .
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 120 (expr)


state 201

   26 arrayExpr: arrayExpr LB expr RB .

    $default  reduce using rule 26 (arrayExpr)


state 202

   29 arrayExprDec: LB INT RB .

    $default  reduce using rule 29 (arrayExprDec)


state 203

   28 arrayExprDec: arrayExprDec LB INT . RB

    RB  shift, and go to state 225


state 204

   64 stmt: error expr SEMI .

    $default  reduce using rule 64 (stmt)


state 205

   84 forexpr: error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 84 (forexpr)


state 206

   72 stmt: FOR error forexpr . SEMI logexpr SEMI forexpr RP stmt

    SEMI  shift, and go to state 226


state 207

   82 forexpr: expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 82 (forexpr)


state 208

   59 stmt: FOR LP forexpr . SEMI logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr . SEMI error SEMI forexpr RP stmt
   74     | FOR LP forexpr . SEMI logexpr error forexpr RP stmt

    SEMI  shift, and go to state 227


state 209

   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 228
    MINUS        shift, and go to state 67
    EQ           shift, and go to state 229
    LT           shift, and go to state 230
    GT           shift, and go to state 231
    LE           shift, and go to state 232
    GE           shift, and go to state 233
    NE           shift, and go to state 234
    AND          shift, and go to state 235
    OR           shift, and go to state 236
    NOT          shift, and go to state 211

    logexpr  go to state 237
    expr     go to state 213


state 210

   94 logexpr: LP . logexpr RP
  111        | LP . error RP
  112        | LP . logexpr error
  121 expr: LP . expr RP

    error        shift, and go to state 238
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 239
    expr     go to state 240


state 211

   93 logexpr: NOT . logexpr

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 241
    expr     go to state 213


state 212

   75 stmt: IF error logexpr . RP stmt ELSE stmt
   79     | IF error logexpr . RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    RP   shift, and go to state 242
    AND  shift, and go to state 243
    OR   shift, and go to state 244


state 213

   87 logexpr: expr . NE expr
   88        | expr . EQ expr
   89        | expr . GE expr
   90        | expr . LE expr
   91        | expr . GT expr
   92        | expr . LT expr
   98        | expr . error expr
   99        | expr . NE error
  101        | expr . EQ error
  103        | expr . GE error
  105        | expr . LE error
  107        | expr . GT error
  109        | expr . LT error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    error  shift, and go to state 245
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97
    EQ     shift, and go to state 246
    LT     shift, and go to state 247
    GT     shift, and go to state 248
    LE     shift, and go to state 249
    GE     shift, and go to state 250
    NE     shift, and go to state 251


state 214

   76 stmt: IF LP error . RP stmt ELSE stmt
   80     | IF LP error . RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 228
    RP           shift, and go to state 252
    MINUS        shift, and go to state 67
    EQ           shift, and go to state 229
    LT           shift, and go to state 230
    GT           shift, and go to state 231
    LE           shift, and go to state 232
    GE           shift, and go to state 233
    NE           shift, and go to state 234
    AND          shift, and go to state 235
    OR           shift, and go to state 236
    NOT          shift, and go to state 211

    logexpr  go to state 237
    expr     go to state 213


state 215

   56 stmt: IF LP logexpr . RP stmt
   57     | IF LP logexpr . RP stmt ELSE stmt
   77     | IF LP logexpr . error stmt ELSE stmt
   78     | IF LP logexpr . RP error ELSE stmt
   81     | IF LP logexpr . error stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 253
    RP     shift, and go to state 254
    AND    shift, and go to state 243
    OR     shift, and go to state 244


state 216

   65 stmt: RETURN error SEMI .

    $default  reduce using rule 65 (stmt)


state 217

   66 stmt: RETURN expr error .

    $default  reduce using rule 66 (stmt)


state 218

   53 stmt: RETURN expr SEMI .

    $default  reduce using rule 53 (stmt)


state 219

   69 stmt: WHILE error logexpr . RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    RP   shift, and go to state 255
    AND  shift, and go to state 243
    OR   shift, and go to state 244


state 220

   70 stmt: WHILE LP error . RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 228
    RP           shift, and go to state 256
    MINUS        shift, and go to state 67
    EQ           shift, and go to state 229
    LT           shift, and go to state 230
    GT           shift, and go to state 231
    LE           shift, and go to state 232
    GE           shift, and go to state 233
    NE           shift, and go to state 234
    AND          shift, and go to state 235
    OR           shift, and go to state 236
    NOT          shift, and go to state 211

    logexpr  go to state 237
    expr     go to state 213


state 221

   58 stmt: WHILE LP logexpr . RP stmt
   71     | WHILE LP logexpr . error stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 257
    RP     shift, and go to state 258
    AND    shift, and go to state 243
    OR     shift, and go to state 244


state 222

   51 compSt: LC error RC .

    $default  reduce using rule 51 (compSt)


state 223

   50 compSt: LC stmts RC .

    $default  reduce using rule 50 (compSt)


state 224

  124 expr: ID DOT ID LP args RP .

    $default  reduce using rule 124 (expr)


state 225

   28 arrayExprDec: arrayExprDec LB INT RB .

    $default  reduce using rule 28 (arrayExprDec)


state 226

   72 stmt: FOR error forexpr SEMI . logexpr SEMI forexpr RP stmt

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 259
    expr     go to state 213


state 227

   59 stmt: FOR LP forexpr SEMI . logexpr SEMI forexpr RP stmt
   73     | FOR LP forexpr SEMI . error SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI . logexpr error forexpr RP stmt

    error        shift, and go to state 260
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 261
    expr     go to state 213


state 228

   94 logexpr: LP . logexpr RP
  111        | LP . error RP
  112        | LP . logexpr error
  121 expr: LP . expr RP
  138     | error LP . RP

    error        shift, and go to state 238
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    RP           shift, and go to state 107
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 239
    expr     go to state 240


state 229

  100 logexpr: error EQ . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 262


state 230

  108 logexpr: error LT . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 263


state 231

  106 logexpr: error GT . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 264


state 232

  104 logexpr: error LE . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 265


state 233

  102 logexpr: error GE . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 266


state 234

   97 logexpr: error NE . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 267


state 235

   95 logexpr: error AND . logexpr

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 268
    expr     go to state 213


state 236

   96 logexpr: error OR . logexpr

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 269
    expr     go to state 213


state 237

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
  110        | error logexpr . RP

    RP   shift, and go to state 270
    AND  shift, and go to state 243
    OR   shift, and go to state 244


state 238

   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  111        | LP error . RP
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 228
    RP           shift, and go to state 271
    MINUS        shift, and go to state 67
    EQ           shift, and go to state 229
    LT           shift, and go to state 230
    GT           shift, and go to state 231
    LE           shift, and go to state 232
    GE           shift, and go to state 233
    NE           shift, and go to state 234
    AND          shift, and go to state 235
    OR           shift, and go to state 236
    NOT          shift, and go to state 211

    logexpr  go to state 237
    expr     go to state 213


state 239

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   94        | LP logexpr . RP
  112        | LP logexpr . error

    error  shift, and go to state 272
    RP     shift, and go to state 273
    AND    shift, and go to state 243
    OR     shift, and go to state 244


state 240

   87 logexpr: expr . NE expr
   88        | expr . EQ expr
   89        | expr . GE expr
   90        | expr . LE expr
   91        | expr . GT expr
   92        | expr . LT expr
   98        | expr . error expr
   99        | expr . NE error
  101        | expr . EQ error
  103        | expr . GE error
  105        | expr . LE error
  107        | expr . GT error
  109        | expr . LT error
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  121     | LP expr . RP
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    error  shift, and go to state 245
    RP     shift, and go to state 119
    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97
    EQ     shift, and go to state 246
    LT     shift, and go to state 247
    GT     shift, and go to state 248
    LE     shift, and go to state 249
    GE     shift, and go to state 250
    NE     shift, and go to state 251


state 241

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   93        | NOT logexpr .

    $default  reduce using rule 93 (logexpr)


state 242

   75 stmt: IF error logexpr RP . stmt ELSE stmt
   79     | IF error logexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 274
    expr    go to state 145


state 243

   85 logexpr: logexpr AND . logexpr

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 275
    expr     go to state 213


state 244

   86 logexpr: logexpr OR . logexpr

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 210
    MINUS        shift, and go to state 67
    NOT          shift, and go to state 211

    logexpr  go to state 276
    expr     go to state 213


state 245

   98 logexpr: expr error . expr

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 277


state 246

   88 logexpr: expr EQ . expr
  101        | expr EQ . error

    error        shift, and go to state 278
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 279


state 247

   92 logexpr: expr LT . expr
  109        | expr LT . error

    error        shift, and go to state 280
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 281


state 248

   91 logexpr: expr GT . expr
  107        | expr GT . error

    error        shift, and go to state 282
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 283


state 249

   90 logexpr: expr LE . expr
  105        | expr LE . error

    error        shift, and go to state 284
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 285


state 250

   89 logexpr: expr GE . expr
  103        | expr GE . error

    error        shift, and go to state 286
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 287


state 251

   87 logexpr: expr NE . expr
   99        | expr NE . error

    error        shift, and go to state 288
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    expr  go to state 289


state 252

   76 stmt: IF LP error RP . stmt ELSE stmt
   80     | IF LP error RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 290
    expr    go to state 145


state 253

   77 stmt: IF LP logexpr error . stmt ELSE stmt
   81     | IF LP logexpr error . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 291
    expr    go to state 145


state 254

   56 stmt: IF LP logexpr RP . stmt
   57     | IF LP logexpr RP . stmt ELSE stmt
   78     | IF LP logexpr RP . error ELSE stmt

    error        shift, and go to state 292
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 293
    expr    go to state 145


state 255

   69 stmt: WHILE error logexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 294
    expr    go to state 145


state 256

   70 stmt: WHILE LP error RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 295
    expr    go to state 145


state 257

   71 stmt: WHILE LP logexpr error . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 296
    expr    go to state 145


state 258

   58 stmt: WHILE LP logexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 297
    expr    go to state 145


state 259

   72 stmt: FOR error forexpr SEMI logexpr . SEMI forexpr RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    SEMI  shift, and go to state 298
    AND   shift, and go to state 243
    OR    shift, and go to state 244


state 260

   73 stmt: FOR LP forexpr SEMI error . SEMI forexpr RP stmt
   95 logexpr: error . AND logexpr
   96        | error . OR logexpr
   97        | error . NE expr
  100        | error . EQ expr
  102        | error . GE expr
  104        | error . LE expr
  106        | error . GT expr
  108        | error . LT expr
  110        | error . logexpr RP
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 209
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    SEMI         shift, and go to state 299
    LP           shift, and go to state 228
    MINUS        shift, and go to state 67
    EQ           shift, and go to state 229
    LT           shift, and go to state 230
    GT           shift, and go to state 231
    LE           shift, and go to state 232
    GE           shift, and go to state 233
    NE           shift, and go to state 234
    AND          shift, and go to state 235
    OR           shift, and go to state 236
    NOT          shift, and go to state 211

    logexpr  go to state 237
    expr     go to state 213


state 261

   59 stmt: FOR LP forexpr SEMI logexpr . SEMI forexpr RP stmt
   74     | FOR LP forexpr SEMI logexpr . error forexpr RP stmt
   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr

    error  shift, and go to state 300
    SEMI   shift, and go to state 301
    AND    shift, and go to state 243
    OR     shift, and go to state 244


state 262

  100 logexpr: error EQ expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 100 (logexpr)


state 263

  108 logexpr: error LT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 108 (logexpr)


state 264

  106 logexpr: error GT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 106 (logexpr)


state 265

  104 logexpr: error LE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 104 (logexpr)


state 266

  102 logexpr: error GE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 102 (logexpr)


state 267

   97 logexpr: error NE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 97 (logexpr)


state 268

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   95        | error AND logexpr .

    $default  reduce using rule 95 (logexpr)


state 269

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   96        | error OR logexpr .

    AND  shift, and go to state 243

    $default  reduce using rule 96 (logexpr)


state 270

  110 logexpr: error logexpr RP .

    $default  reduce using rule 110 (logexpr)


state 271

  111 logexpr: LP error RP .

    $default  reduce using rule 111 (logexpr)


state 272

  112 logexpr: LP logexpr error .

    $default  reduce using rule 112 (logexpr)


state 273

   94 logexpr: LP logexpr RP .

    $default  reduce using rule 94 (logexpr)


state 274

   75 stmt: IF error logexpr RP stmt . ELSE stmt
   79     | IF error logexpr RP stmt .

    ELSE  shift, and go to state 302

    $default  reduce using rule 79 (stmt)


state 275

   85 logexpr: logexpr . AND logexpr
   85        | logexpr AND logexpr .
   86        | logexpr . OR logexpr

    $default  reduce using rule 85 (logexpr)


state 276

   85 logexpr: logexpr . AND logexpr
   86        | logexpr . OR logexpr
   86        | logexpr OR logexpr .

    AND  shift, and go to state 243

    $default  reduce using rule 86 (logexpr)


state 277

   98 logexpr: expr error expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 98 (logexpr)


state 278

  101 logexpr: expr EQ error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 101 (logexpr)


state 279

   88 logexpr: expr EQ expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 88 (logexpr)


state 280

  109 logexpr: expr LT error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 109 (logexpr)


state 281

   92 logexpr: expr LT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 92 (logexpr)


state 282

  107 logexpr: expr GT error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 107 (logexpr)


state 283

   91 logexpr: expr GT expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 91 (logexpr)


state 284

  105 logexpr: expr LE error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 105 (logexpr)


state 285

   90 logexpr: expr LE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 90 (logexpr)


state 286

  103 logexpr: expr GE error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 103 (logexpr)


state 287

   89 logexpr: expr GE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 89 (logexpr)


state 288

   99 logexpr: expr NE error .
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    TYPE  shift, and go to state 82
    LP    shift, and go to state 83

    $default  reduce using rule 99 (logexpr)


state 289

   87 logexpr: expr NE expr .
  113 expr: expr . MINUS expr
  114     | expr . PLUS expr
  115     | expr . MULT expr
  116     | expr . DIV expr
  132     | expr . MINUS error
  133     | expr . PLUS error
  134     | expr . MULT error
  135     | expr . DIV error

    PLUS   shift, and go to state 94
    DIV    shift, and go to state 95
    MINUS  shift, and go to state 96
    MULT   shift, and go to state 97

    $default  reduce using rule 87 (logexpr)


state 290

   76 stmt: IF LP error RP stmt . ELSE stmt
   80     | IF LP error RP stmt .

    ELSE  shift, and go to state 303

    $default  reduce using rule 80 (stmt)


state 291

   77 stmt: IF LP logexpr error stmt . ELSE stmt
   81     | IF LP logexpr error stmt .

    ELSE  shift, and go to state 304

    $default  reduce using rule 81 (stmt)


state 292

   62 stmt: error . SEMI
   64     | error . expr SEMI
   78     | IF LP logexpr RP error . ELSE stmt
  138 expr: error . LP RP
  140     | error . TYPE LP RP

    error        shift, and go to state 60
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 82
    ID           shift, and go to state 63
    ELSE         shift, and go to state 305
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    SEMI         shift, and go to state 165
    LP           shift, and go to state 166
    MINUS        shift, and go to state 67

    expr  go to state 167


state 293

   56 stmt: IF LP logexpr RP stmt .
   57     | IF LP logexpr RP stmt . ELSE stmt

    ELSE  shift, and go to state 306

    $default  reduce using rule 56 (stmt)


state 294

   69 stmt: WHILE error logexpr RP stmt .

    $default  reduce using rule 69 (stmt)


state 295

   70 stmt: WHILE LP error RP stmt .

    $default  reduce using rule 70 (stmt)


state 296

   71 stmt: WHILE LP logexpr error stmt .

    $default  reduce using rule 71 (stmt)


state 297

   58 stmt: WHILE LP logexpr RP stmt .

    $default  reduce using rule 58 (stmt)


state 298

   72 stmt: FOR error forexpr SEMI logexpr SEMI . forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 307
    expr     go to state 207


state 299

   73 stmt: FOR LP forexpr SEMI error SEMI . forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 308
    expr     go to state 207


state 300

   74 stmt: FOR LP forexpr SEMI logexpr error . forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 309
    expr     go to state 207


state 301

   59 stmt: FOR LP forexpr SEMI logexpr SEMI . forexpr RP stmt

    error        shift, and go to state 205
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    ID           shift, and go to state 63
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    RP  reduce using rule 83 (forexpr)

    forexpr  go to state 310
    expr     go to state 207


state 302

   75 stmt: IF error logexpr RP stmt ELSE . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 311
    expr    go to state 145


state 303

   76 stmt: IF LP error RP stmt ELSE . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 312
    expr    go to state 145


state 304

   77 stmt: IF LP logexpr error stmt ELSE . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 313
    expr    go to state 145


state 305

   78 stmt: IF LP logexpr RP error ELSE . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 314
    expr    go to state 145


state 306

   57 stmt: IF LP logexpr RP stmt ELSE . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 315
    expr    go to state 145


state 307

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr . RP stmt

    RP  shift, and go to state 316


state 308

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr . RP stmt

    RP  shift, and go to state 317


state 309

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr . RP stmt

    RP  shift, and go to state 318


state 310

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr . RP stmt

    RP  shift, and go to state 319


state 311

   75 stmt: IF error logexpr RP stmt ELSE stmt .

    $default  reduce using rule 75 (stmt)


state 312

   76 stmt: IF LP error RP stmt ELSE stmt .

    $default  reduce using rule 76 (stmt)


state 313

   77 stmt: IF LP logexpr error stmt ELSE stmt .

    $default  reduce using rule 77 (stmt)


state 314

   78 stmt: IF LP logexpr RP error ELSE stmt .

    $default  reduce using rule 78 (stmt)


state 315

   57 stmt: IF LP logexpr RP stmt ELSE stmt .

    $default  reduce using rule 57 (stmt)


state 316

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 320
    expr    go to state 145


state 317

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 321
    expr    go to state 145


state 318

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 322
    expr    go to state 145


state 319

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr RP . stmt

    error        shift, and go to state 132
    INT          shift, and go to state 61
    STRCONSTANT  shift, and go to state 62
    TYPE         shift, and go to state 20
    ID           shift, and go to state 63
    BREAK        shift, and go to state 133
    CONTINUE     shift, and go to state 134
    VOID         shift, and go to state 21
    FOR          shift, and go to state 135
    IF           shift, and go to state 136
    NEW          shift, and go to state 64
    NUL          shift, and go to state 65
    RETURN       shift, and go to state 137
    WHILE        shift, and go to state 138
    LC           shift, and go to state 139
    LP           shift, and go to state 66
    MINUS        shift, and go to state 67

    COMMA  reduce using rule 19 (varDec)
    SEMI   reduce using rule 19 (varDec)

    varDec  go to state 140
    type    go to state 141
    compSt  go to state 143
    stmt    go to state 323
    expr    go to state 145


state 320

   72 stmt: FOR error forexpr SEMI logexpr SEMI forexpr RP stmt .

    $default  reduce using rule 72 (stmt)


state 321

   73 stmt: FOR LP forexpr SEMI error SEMI forexpr RP stmt .

    $default  reduce using rule 73 (stmt)


state 322

   74 stmt: FOR LP forexpr SEMI logexpr error forexpr RP stmt .

    $default  reduce using rule 74 (stmt)


state 323

   59 stmt: FOR LP forexpr SEMI logexpr SEMI forexpr RP stmt .

    $default  reduce using rule 59 (stmt)
